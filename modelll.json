{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "882f700c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np \n",
    "import matplotlib.pyplot as plt\n",
    "import sklearn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0ecac6a2",
   "metadata": {},
   "outputs": [],
   "source": [
    "#importing 2017-2020 data\n",
    "df = pd.read_csv(\"data/2017-2020.csv\",low_memory=False, parse_dates=[\"Year\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9974e367",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 240 entries, 0 to 239\n",
      "Data columns (total 12 columns):\n",
      " #   Column        Non-Null Count  Dtype         \n",
      "---  ------        --------------  -----         \n",
      " 0   Year          240 non-null    datetime64[ns]\n",
      " 1   College Code  240 non-null    int64         \n",
      " 2   College_Name  240 non-null    object        \n",
      " 3   Branch Code   240 non-null    object        \n",
      " 4   Branch Name   240 non-null    object        \n",
      " 5   OC            240 non-null    float64       \n",
      " 6   BC            227 non-null    float64       \n",
      " 7   BCM           218 non-null    float64       \n",
      " 8   MBC           228 non-null    float64       \n",
      " 9   SC            228 non-null    float64       \n",
      " 10  SCA           203 non-null    float64       \n",
      " 11  ST            118 non-null    float64       \n",
      "dtypes: datetime64[ns](1), float64(7), int64(1), object(3)\n",
      "memory usage: 22.6+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "5ab8be06",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Year              0\n",
       "College Code      0\n",
       "College_Name      0\n",
       "Branch Code       0\n",
       "Branch Name       0\n",
       "OC                0\n",
       "BC               13\n",
       "BCM              22\n",
       "MBC              12\n",
       "SC               12\n",
       "SCA              37\n",
       "ST              122\n",
       "dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isna().sum() #eturns the number of missing values in each column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "19b1e660",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Year', 'College Code', 'College_Name', 'Branch Code', 'Branch Name',\n",
       "       'OC', 'BC', 'BCM', 'MBC', 'SC', 'SCA', 'ST'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "5df1e210",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x23954115ba0>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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n5+P48ePIzY2FlFRUVi9ejXy8vLQo0ePDrWjKT3/f+jZjqbn1h133IFZs2YhPT1dqnZ05nn10EMPwWaz4bXXXkNdXR0qKirw61//GkDjPIKOtKMpPc8rPdvR2dcsPdui17lVVlaG3/72t3jqqac8jichIaFZbEJCgtd/j/acW+0hXeIyf/58fPnll3j//febvaYoisfPQohmz6l18eJFfPzxx5gzZ47H83fffTe6d++O7t27Y9KkSV7/dkvPA8DZs2dx5coV6dowcOBAzJ07F0OGDEFGRgbWrVuHvn374vjx49K15cUXX8SkSZMwYsQIhIeHY8yYMe5vM6GhoZq2QwiBZ555BgkJCfjss89w+PBhTJ06FZMnT3ZfzLQ4r4DGyYh6/f/Qsx1Nz62QkBBER0c3uwgGejs687y6++678c477+APf/gDYmJiYDKZcNtttyExMdH9t2Q4r/RsR2dfs/Rsix7nlsPhwCOPPILU1FQsXbrU63s0fR+tzq32CNPsnTrBggULsGPHDhQUFKB3797u52/ONpOSktzPl5aWtnjhU2PTpk2Ij49HVlaWx/O7du1CfX09gO+7AE0mU7NssrS0FEDzzHfBggUoKyvDjBkzpG3DzW2pqKhAUlKSdG2Jjo7Gn/70J2zYsAFPPvkkdu/ejSeffBKvvfYaevXqpWk79uzZg7/85S+oqKhwbw+/bt065Ofn45133sELL7ygyWfyj3/8Aw6HA19++aUun0dntcP1/3zevHnYtWuXVO3ozPMKAGbOnImZM2fi22+/Rbdu3aAoClatWoWUlBQA2vxf1/u86qx2AJ1zzdKrLVqfW5WVlcjMzET37t2xfft2hIeHe/x7fPvtt83a9t1337nfR6vPpD2k6HERQmD+/PnYtm0b9uzZ4z4BXFJSUmAymZCfn+9+rq6uDvv378fIkSPb9fc2bdqEn/zkJx4fJgD07dsXt99+O26//XbceuutAICMjAwUFBS4560AwCeffAKz2Yx+/fo1a8M999wDg8EgXRtufm9XW0aMGIG+fftK2RYhBJ599ll88skn2LNnD3bv3o3Jkye7x421akd1dTUAeIx7u352Op2atGP+/Pm4cuUKpk2bptv/j85qh+v/+YULFzwuvjK1ozPOq5slJiaie/fu+POf/4yoqCiMHz9ek3Z0xnmldztubktnXbP0aotW55bD4cCECRMQERGBHTt2NJs7k5GRAbvdjsOHD7uf+/zzz2G3293v09HPpEN8ns7rB/PmzRMGg0Hs27fPY2lsdXW1O2bFihXCYDCIbdu2iRMnTogZM2Y0W8pmtVrF8ePHxcaNG92rCo4fPy7Kyso8/t7u3bsFAHHy5ElVx3f16lWRmJgoZsyYIU6cOCG2bdsm4uLiPJaAzZs3T3Tv3l1s3LhR3HPPPeLf/u3fRH5+vigqKpKmDatXrxbbt28XM2fOFLGxsWLmzJkCgHjrrbek+zxOnz4txo4dK2JjY8X69etFVlaW6NGjhzh8+LDm7fjuu+9EfHy8mDZtmiguLhanT58WixcvFuHh4aK4uLhD7RBCiH//938X3bt3F3fccYf7vNq3b59U7Vi9erXIzMwUsbGxYtOmTWL+/Pnuc0umdnTmeSWEEGvWrBFFRUXi9OnTYu3atSI6Olq88cYbrbZBbTuE6LzzSs92+OOapVdbtDq3HA6HGD58uEhPTxdnz571uKfeuHHD/T6ZmZninnvuEYWFhaKwsFCkp6e3uRxa7bl1/Phxcfz4cTF06FAxc+ZMcfz4cfHVV195fe+bSZG4AGjxsWnTJneM0+kUS5cuFSaTSURGRooHHnhAnDhxwuN9li5d2ub7CCHEjBkzxMiRI306xi+//FLcf//9IjIyUphMJrFs2TKP5V+ttSE+Pl6aNqxcuVL079+/S3weruV+ndWOI0eOiAkTJgij0ShiY2PFiBEjxK5duzrcDiE69/+HXu1YuXJll2hHZ59Xs2bNEkajUURERIh77rlHvPvuu222QU07hOjc80qvdvjjmqVXW7Q6t1xLuVt6WCwWd1xZWZn48Y9/LGJjY0VsbKz48Y9/3GbJCjXtEKLlc6tv376q/p2EEEL515sQERERBTwp5rgQERERAUxciIiISCJMXIiIiEgaTFyIiIhIGkxciIiISBpMXIiIiEgaTFyIiIhIGkxciIiISBpMXIiIiEgaTFyIiIhIGkxciIiISBpMXIiIiEga/z+yTgOlRJ6wfgAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "ax.scatter(df[\"Year\"][:1000], df[\"OC\"][:1000])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "63156849",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0     2017-01-01\n",
       "1     2017-01-01\n",
       "2     2017-01-01\n",
       "3     2017-01-01\n",
       "4     2017-01-01\n",
       "         ...    \n",
       "235   2020-01-01\n",
       "236   2020-01-01\n",
       "237   2020-01-01\n",
       "238   2020-01-01\n",
       "239   2020-01-01\n",
       "Name: Year, Length: 240, dtype: datetime64[ns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Year[:1000]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "5b858c2a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('<M8[ns]')"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Year.dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "7b7ac7a3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:ylabel='Frequency'>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.OC.plot.hist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "434c9626",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('<M8[ns]')"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Year.dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "f8d04502",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0     2017-01-01\n",
       "1     2017-01-01\n",
       "2     2017-01-01\n",
       "3     2017-01-01\n",
       "4     2017-01-01\n",
       "         ...    \n",
       "235   2020-01-01\n",
       "236   2020-01-01\n",
       "237   2020-01-01\n",
       "238   2020-01-01\n",
       "239   2020-01-01\n",
       "Name: Year, Length: 240, dtype: datetime64[ns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Year[:1000]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "e821ca4f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>College Code</th>\n",
       "      <th>College_Name</th>\n",
       "      <th>Branch Code</th>\n",
       "      <th>Branch Name</th>\n",
       "      <th>OC</th>\n",
       "      <th>BC</th>\n",
       "      <th>BCM</th>\n",
       "      <th>MBC</th>\n",
       "      <th>SC</th>\n",
       "      <th>SCA</th>\n",
       "      <th>ST</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>AI</td>\n",
       "      <td>Agricultural and Irrigation Engg.(SS)</td>\n",
       "      <td>196.25</td>\n",
       "      <td>195.25</td>\n",
       "      <td>193.25</td>\n",
       "      <td>194.25</td>\n",
       "      <td>188.75</td>\n",
       "      <td>185.75</td>\n",
       "      <td>175.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>BY</td>\n",
       "      <td>Bio Medical Engg(SS)</td>\n",
       "      <td>198.25</td>\n",
       "      <td>197.50</td>\n",
       "      <td>197.25</td>\n",
       "      <td>196.50</td>\n",
       "      <td>193.00</td>\n",
       "      <td>191.75</td>\n",
       "      <td>188.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>CE</td>\n",
       "      <td>Civil Engineering</td>\n",
       "      <td>198.50</td>\n",
       "      <td>198.00</td>\n",
       "      <td>197.50</td>\n",
       "      <td>197.50</td>\n",
       "      <td>196.00</td>\n",
       "      <td>193.50</td>\n",
       "      <td>196.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>CM</td>\n",
       "      <td>Computer Science and Engg.(SS)</td>\n",
       "      <td>199.00</td>\n",
       "      <td>198.75</td>\n",
       "      <td>199.00</td>\n",
       "      <td>197.75</td>\n",
       "      <td>193.50</td>\n",
       "      <td>190.50</td>\n",
       "      <td>193.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>CS</td>\n",
       "      <td>Computer Science and Engg.</td>\n",
       "      <td>199.75</td>\n",
       "      <td>199.50</td>\n",
       "      <td>199.50</td>\n",
       "      <td>199.00</td>\n",
       "      <td>197.50</td>\n",
       "      <td>196.25</td>\n",
       "      <td>193.75</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Year  College Code                                       College_Name  \\\n",
       "0 2017-01-01             1  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "1 2017-01-01             1  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "2 2017-01-01             1  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "3 2017-01-01             1  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "4 2017-01-01             1  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "\n",
       "  Branch Code                            Branch Name      OC      BC     BCM  \\\n",
       "0          AI  Agricultural and Irrigation Engg.(SS)  196.25  195.25  193.25   \n",
       "1          BY                   Bio Medical Engg(SS)  198.25  197.50  197.25   \n",
       "2          CE                      Civil Engineering  198.50  198.00  197.50   \n",
       "3          CM         Computer Science and Engg.(SS)  199.00  198.75  199.00   \n",
       "4          CS             Computer Science and Engg.  199.75  199.50  199.50   \n",
       "\n",
       "      MBC      SC     SCA      ST  \n",
       "0  194.25  188.75  185.75  175.25  \n",
       "1  196.50  193.00  191.75  188.00  \n",
       "2  197.50  196.00  193.50  196.00  \n",
       "3  197.75  193.50  190.50  193.33  \n",
       "4  199.00  197.50  196.25  193.75  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "87c509bd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Year</th>\n",
       "      <td>2017-01-01 00:00:00</td>\n",
       "      <td>2017-01-01 00:00:00</td>\n",
       "      <td>2017-01-01 00:00:00</td>\n",
       "      <td>2017-01-01 00:00:00</td>\n",
       "      <td>2017-01-01 00:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>College Code</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>College_Name</th>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Branch Code</th>\n",
       "      <td>AI</td>\n",
       "      <td>BY</td>\n",
       "      <td>CE</td>\n",
       "      <td>CM</td>\n",
       "      <td>CS</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Branch Name</th>\n",
       "      <td>Agricultural and Irrigation Engg.(SS)</td>\n",
       "      <td>Bio Medical Engg(SS)</td>\n",
       "      <td>Civil Engineering</td>\n",
       "      <td>Computer Science and Engg.(SS)</td>\n",
       "      <td>Computer Science and Engg.</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OC</th>\n",
       "      <td>196.25</td>\n",
       "      <td>198.25</td>\n",
       "      <td>198.5</td>\n",
       "      <td>199.0</td>\n",
       "      <td>199.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BC</th>\n",
       "      <td>195.25</td>\n",
       "      <td>197.5</td>\n",
       "      <td>198.0</td>\n",
       "      <td>198.75</td>\n",
       "      <td>199.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BCM</th>\n",
       "      <td>193.25</td>\n",
       "      <td>197.25</td>\n",
       "      <td>197.5</td>\n",
       "      <td>199.0</td>\n",
       "      <td>199.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MBC</th>\n",
       "      <td>194.25</td>\n",
       "      <td>196.5</td>\n",
       "      <td>197.5</td>\n",
       "      <td>197.75</td>\n",
       "      <td>199.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SC</th>\n",
       "      <td>188.75</td>\n",
       "      <td>193.0</td>\n",
       "      <td>196.0</td>\n",
       "      <td>193.5</td>\n",
       "      <td>197.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SCA</th>\n",
       "      <td>185.75</td>\n",
       "      <td>191.75</td>\n",
       "      <td>193.5</td>\n",
       "      <td>190.5</td>\n",
       "      <td>196.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ST</th>\n",
       "      <td>175.25</td>\n",
       "      <td>188.0</td>\n",
       "      <td>196.0</td>\n",
       "      <td>193.33</td>\n",
       "      <td>193.75</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                              0  \\\n",
       "Year                                        2017-01-01 00:00:00   \n",
       "College Code                                                  1   \n",
       "College_Name  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "Branch Code                                                  AI   \n",
       "Branch Name               Agricultural and Irrigation Engg.(SS)   \n",
       "OC                                                       196.25   \n",
       "BC                                                       195.25   \n",
       "BCM                                                      193.25   \n",
       "MBC                                                      194.25   \n",
       "SC                                                       188.75   \n",
       "SCA                                                      185.75   \n",
       "ST                                                       175.25   \n",
       "\n",
       "                                                              1  \\\n",
       "Year                                        2017-01-01 00:00:00   \n",
       "College Code                                                  1   \n",
       "College_Name  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "Branch Code                                                  BY   \n",
       "Branch Name                                Bio Medical Engg(SS)   \n",
       "OC                                                       198.25   \n",
       "BC                                                        197.5   \n",
       "BCM                                                      197.25   \n",
       "MBC                                                       196.5   \n",
       "SC                                                        193.0   \n",
       "SCA                                                      191.75   \n",
       "ST                                                        188.0   \n",
       "\n",
       "                                                              2  \\\n",
       "Year                                        2017-01-01 00:00:00   \n",
       "College Code                                                  1   \n",
       "College_Name  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "Branch Code                                                  CE   \n",
       "Branch Name                                   Civil Engineering   \n",
       "OC                                                        198.5   \n",
       "BC                                                        198.0   \n",
       "BCM                                                       197.5   \n",
       "MBC                                                       197.5   \n",
       "SC                                                        196.0   \n",
       "SCA                                                       193.5   \n",
       "ST                                                        196.0   \n",
       "\n",
       "                                                              3  \\\n",
       "Year                                        2017-01-01 00:00:00   \n",
       "College Code                                                  1   \n",
       "College_Name  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "Branch Code                                                  CM   \n",
       "Branch Name                      Computer Science and Engg.(SS)   \n",
       "OC                                                        199.0   \n",
       "BC                                                       198.75   \n",
       "BCM                                                       199.0   \n",
       "MBC                                                      197.75   \n",
       "SC                                                        193.5   \n",
       "SCA                                                       190.5   \n",
       "ST                                                       193.33   \n",
       "\n",
       "                                                              4  \n",
       "Year                                        2017-01-01 00:00:00  \n",
       "College Code                                                  1  \n",
       "College_Name  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...  \n",
       "Branch Code                                                  CS  \n",
       "Branch Name                          Computer Science and Engg.  \n",
       "OC                                                       199.75  \n",
       "BC                                                        199.5  \n",
       "BCM                                                       199.5  \n",
       "MBC                                                       199.0  \n",
       "SC                                                        197.5  \n",
       "SCA                                                      196.25  \n",
       "ST                                                       193.75  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#transpose\n",
    "df.head().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "77471842",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    2017-01-01\n",
       "1    2017-01-01\n",
       "2    2017-01-01\n",
       "3    2017-01-01\n",
       "4    2017-01-01\n",
       "5    2017-01-01\n",
       "6    2017-01-01\n",
       "7    2017-01-01\n",
       "8    2017-01-01\n",
       "9    2017-01-01\n",
       "10   2017-01-01\n",
       "11   2017-01-01\n",
       "12   2017-01-01\n",
       "13   2017-01-01\n",
       "14   2017-01-01\n",
       "15   2017-01-01\n",
       "16   2017-01-01\n",
       "17   2017-01-01\n",
       "18   2017-01-01\n",
       "19   2017-01-01\n",
       "Name: Year, dtype: datetime64[ns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Year.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "81ada62d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    2017-01-01\n",
       "32   2017-01-01\n",
       "33   2017-01-01\n",
       "34   2017-01-01\n",
       "35   2017-01-01\n",
       "36   2017-01-01\n",
       "37   2017-01-01\n",
       "38   2017-01-01\n",
       "39   2017-01-01\n",
       "40   2017-01-01\n",
       "41   2017-01-01\n",
       "42   2017-01-01\n",
       "43   2017-01-01\n",
       "45   2017-01-01\n",
       "46   2017-01-01\n",
       "47   2017-01-01\n",
       "48   2017-01-01\n",
       "49   2017-01-01\n",
       "50   2017-01-01\n",
       "51   2017-01-01\n",
       "Name: Year, dtype: datetime64[ns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sort_values(by=[\"Year\"], inplace=True, ascending=True)\n",
    "df.Year.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "de3a578c",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_tmp = df.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "e14fa688",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_tmp[\"tYear\"] = df_tmp.Year.dt.year"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "a229cbff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>32</th>\n",
       "      <th>33</th>\n",
       "      <th>34</th>\n",
       "      <th>35</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Year</th>\n",
       "      <td>2017-01-01 00:00:00</td>\n",
       "      <td>2017-01-01 00:00:00</td>\n",
       "      <td>2017-01-01 00:00:00</td>\n",
       "      <td>2017-01-01 00:00:00</td>\n",
       "      <td>2017-01-01 00:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>College Code</th>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>College_Name</th>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Branch Code</th>\n",
       "      <td>AI</td>\n",
       "      <td>CM</td>\n",
       "      <td>CS</td>\n",
       "      <td>EC</td>\n",
       "      <td>EI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Branch Name</th>\n",
       "      <td>Agricultural and Irrigation Engg.(SS)</td>\n",
       "      <td>Computer Science and Engg.(SS)</td>\n",
       "      <td>Computer Science and Engg.</td>\n",
       "      <td>Electronics and Comm Engg.</td>\n",
       "      <td>Electronics and Instru Engg.</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OC</th>\n",
       "      <td>196.25</td>\n",
       "      <td>198.5</td>\n",
       "      <td>198.75</td>\n",
       "      <td>199.25</td>\n",
       "      <td>198.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BC</th>\n",
       "      <td>195.25</td>\n",
       "      <td>198.33</td>\n",
       "      <td>198.5</td>\n",
       "      <td>199.0</td>\n",
       "      <td>198.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BCM</th>\n",
       "      <td>193.25</td>\n",
       "      <td>197.5</td>\n",
       "      <td>198.0</td>\n",
       "      <td>198.0</td>\n",
       "      <td>197.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MBC</th>\n",
       "      <td>194.25</td>\n",
       "      <td>197.0</td>\n",
       "      <td>197.75</td>\n",
       "      <td>198.25</td>\n",
       "      <td>197.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SC</th>\n",
       "      <td>188.75</td>\n",
       "      <td>192.0</td>\n",
       "      <td>195.0</td>\n",
       "      <td>196.5</td>\n",
       "      <td>192.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SCA</th>\n",
       "      <td>185.75</td>\n",
       "      <td>186.0</td>\n",
       "      <td>197.5</td>\n",
       "      <td>196.25</td>\n",
       "      <td>190.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ST</th>\n",
       "      <td>175.25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>192.25</td>\n",
       "      <td>188.25</td>\n",
       "      <td>176.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tYear</th>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                             0   \\\n",
       "Year                                        2017-01-01 00:00:00   \n",
       "College Code                                                  1   \n",
       "College_Name  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "Branch Code                                                  AI   \n",
       "Branch Name               Agricultural and Irrigation Engg.(SS)   \n",
       "OC                                                       196.25   \n",
       "BC                                                       195.25   \n",
       "BCM                                                      193.25   \n",
       "MBC                                                      194.25   \n",
       "SC                                                       188.75   \n",
       "SCA                                                      185.75   \n",
       "ST                                                       175.25   \n",
       "tYear                                                      2017   \n",
       "\n",
       "                                                             32  \\\n",
       "Year                                        2017-01-01 00:00:00   \n",
       "College Code                                                  4   \n",
       "College_Name  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "Branch Code                                                  CM   \n",
       "Branch Name                      Computer Science and Engg.(SS)   \n",
       "OC                                                        198.5   \n",
       "BC                                                       198.33   \n",
       "BCM                                                       197.5   \n",
       "MBC                                                       197.0   \n",
       "SC                                                        192.0   \n",
       "SCA                                                       186.0   \n",
       "ST                                                          NaN   \n",
       "tYear                                                      2017   \n",
       "\n",
       "                                                             33  \\\n",
       "Year                                        2017-01-01 00:00:00   \n",
       "College Code                                                  4   \n",
       "College_Name  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "Branch Code                                                  CS   \n",
       "Branch Name                          Computer Science and Engg.   \n",
       "OC                                                       198.75   \n",
       "BC                                                        198.5   \n",
       "BCM                                                       198.0   \n",
       "MBC                                                      197.75   \n",
       "SC                                                        195.0   \n",
       "SCA                                                       197.5   \n",
       "ST                                                       192.25   \n",
       "tYear                                                      2017   \n",
       "\n",
       "                                                             34  \\\n",
       "Year                                        2017-01-01 00:00:00   \n",
       "College Code                                                  4   \n",
       "College_Name  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "Branch Code                                                  EC   \n",
       "Branch Name                          Electronics and Comm Engg.   \n",
       "OC                                                       199.25   \n",
       "BC                                                        199.0   \n",
       "BCM                                                       198.0   \n",
       "MBC                                                      198.25   \n",
       "SC                                                        196.5   \n",
       "SCA                                                      196.25   \n",
       "ST                                                       188.25   \n",
       "tYear                                                      2017   \n",
       "\n",
       "                                                             35  \n",
       "Year                                        2017-01-01 00:00:00  \n",
       "College Code                                                  4  \n",
       "College_Name  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...  \n",
       "Branch Code                                                  EI  \n",
       "Branch Name                        Electronics and Instru Engg.  \n",
       "OC                                                       198.25  \n",
       "BC                                                        198.0  \n",
       "BCM                                                      197.75  \n",
       "MBC                                                      197.25  \n",
       "SC                                                       192.75  \n",
       "SCA                                                      190.75  \n",
       "ST                                                        176.5  \n",
       "tYear                                                      2017  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tmp.head().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "37fadfe6",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_tmp.drop(\"Year\", axis=1, inplace=True)  #Drop specified labels from rows or columns. Remove rows or columns by specifying label names and corresponding axis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "b53e4681",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHENNAI - CEG CAMPUS,SARDAR PATEL ROAD, GUINDY,CHENNAI DIST, PIN - 600025.             36\n",
       "University Departments of Anna University, Chennai - CEG Campus, Sardar Patel Road, Guindy, Chennai 600 025                       34\n",
       "UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHENNAI - MIT CAMPUS,CHROMPET,,KANCHEEPURAM DIST, PIN - 600044.                        26\n",
       "UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHENNAI - ACT CAMPUS,SARDAR PATEL ROAD, GUINDY,CHENNAI DIST, PIN - 600025.             22\n",
       "University Departments of Anna University, Chennai - ACT Campus, Sardar Patel Road, Guindy, Chennai 600 025                       22\n",
       "Annamalai University Faculty of Engineering and Technology,Annamalai nagar,Cuddalore 608002                                       12\n",
       "University Departments of Anna University, Chennai - MIT Campus, Chrompet, Tambaram Taluk, Kancheepuram District 600 044          12\n",
       "University Departments of Anna University, Chennai - MIT Campus, Chrompet, Tambaram Taluk, Chengalpattu District 600 044          12\n",
       "Annamalai University Faculty of Engineering and Technology,Annamalai nagar,Cuddalore                                              12\n",
       "UNIVERSITY COLLEGE OF ENGINEERING, VILLUPURAM,VILLUPURAM (POST) , KAKUPPAM (VILLAGE),VILLUPURAM DIST, PIN - 605103.               10\n",
       "UNIVERSITY COLLEGE OF ENGINEERING, TINDIVANAM,IYYANTHOPE (POST) , MELPAKKAM (VILLAGE),VILLUPURAM DIST, PIN - 604001.              10\n",
       "UNIVERSITY COLLEGE OF ENGINEERING, ARNI,ARNI TO DEVIKAPURAM ROAD, THATCHUR, ARNI,THIRUVANNAMALAI DIST, PIN - 632326.              10\n",
       "University College of Engineering, Villupuram, Kakuppam, Villupuram District 605103                                               10\n",
       "UNIVERSITY COLLEGE OF ENGINEERING, KANCHIPURAM,NH-4, CHENNAI BANGALORE HIGHWAY, PONNERIKKARAI,KANCHEEPURAM DIST, PIN - 631552.     6\n",
       "University College of Engineering, Tindivanam, Melpakkam, Tindivanam, Villupuram District 604001                                   6\n",
       "Name: College_Name, dtype: int64"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tmp.College_Name.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "34c639bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>College Code</th>\n",
       "      <th>College_Name</th>\n",
       "      <th>Branch Code</th>\n",
       "      <th>Branch Name</th>\n",
       "      <th>OC</th>\n",
       "      <th>BC</th>\n",
       "      <th>BCM</th>\n",
       "      <th>MBC</th>\n",
       "      <th>SC</th>\n",
       "      <th>SCA</th>\n",
       "      <th>ST</th>\n",
       "      <th>tYear</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>AI</td>\n",
       "      <td>Agricultural and Irrigation Engg.(SS)</td>\n",
       "      <td>196.25</td>\n",
       "      <td>195.25</td>\n",
       "      <td>193.25</td>\n",
       "      <td>194.25</td>\n",
       "      <td>188.75</td>\n",
       "      <td>185.75</td>\n",
       "      <td>175.25</td>\n",
       "      <td>2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>4</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>CM</td>\n",
       "      <td>Computer Science and Engg.(SS)</td>\n",
       "      <td>198.50</td>\n",
       "      <td>198.33</td>\n",
       "      <td>197.50</td>\n",
       "      <td>197.00</td>\n",
       "      <td>192.00</td>\n",
       "      <td>186.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>4</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>CS</td>\n",
       "      <td>Computer Science and Engg.</td>\n",
       "      <td>198.75</td>\n",
       "      <td>198.50</td>\n",
       "      <td>198.00</td>\n",
       "      <td>197.75</td>\n",
       "      <td>195.00</td>\n",
       "      <td>197.50</td>\n",
       "      <td>192.25</td>\n",
       "      <td>2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>4</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>EC</td>\n",
       "      <td>Electronics and Comm Engg.</td>\n",
       "      <td>199.25</td>\n",
       "      <td>199.00</td>\n",
       "      <td>198.00</td>\n",
       "      <td>198.25</td>\n",
       "      <td>196.50</td>\n",
       "      <td>196.25</td>\n",
       "      <td>188.25</td>\n",
       "      <td>2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>4</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>EI</td>\n",
       "      <td>Electronics and Instru Engg.</td>\n",
       "      <td>198.25</td>\n",
       "      <td>198.00</td>\n",
       "      <td>197.75</td>\n",
       "      <td>197.25</td>\n",
       "      <td>192.75</td>\n",
       "      <td>190.75</td>\n",
       "      <td>176.50</td>\n",
       "      <td>2017</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    College Code                                       College_Name  \\\n",
       "0              1  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "32             4  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "33             4  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "34             4  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "35             4  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "\n",
       "   Branch Code                            Branch Name      OC      BC     BCM  \\\n",
       "0           AI  Agricultural and Irrigation Engg.(SS)  196.25  195.25  193.25   \n",
       "32          CM         Computer Science and Engg.(SS)  198.50  198.33  197.50   \n",
       "33          CS             Computer Science and Engg.  198.75  198.50  198.00   \n",
       "34          EC             Electronics and Comm Engg.  199.25  199.00  198.00   \n",
       "35          EI           Electronics and Instru Engg.  198.25  198.00  197.75   \n",
       "\n",
       "       MBC      SC     SCA      ST  tYear  \n",
       "0   194.25  188.75  185.75  175.25   2017  \n",
       "32  197.00  192.00  186.00     NaN   2017  \n",
       "33  197.75  195.00  197.50  192.25   2017  \n",
       "34  198.25  196.50  196.25  188.25   2017  \n",
       "35  197.25  192.75  190.75  176.50   2017  "
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tmp.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "f5b9d06b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "240"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(df_tmp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "75a2f4b5",
   "metadata": {},
   "outputs": [],
   "source": [
    "#EDA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "981730f2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "237     80.00\n",
       "231     80.00\n",
       "168     81.50\n",
       "228     81.50\n",
       "171     82.50\n",
       "        ...  \n",
       "6      199.25\n",
       "65     199.33\n",
       "64     199.50\n",
       "4      199.75\n",
       "5      200.00\n",
       "Name: OC, Length: 240, dtype: float64"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tmp.OC.sort_values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "6dea1063",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "166     91.00\n",
       "113     94.00\n",
       "108     97.50\n",
       "172    103.00\n",
       "117    109.25\n",
       "        ...  \n",
       "202       NaN\n",
       "203       NaN\n",
       "206       NaN\n",
       "208       NaN\n",
       "239       NaN\n",
       "Name: ST, Length: 240, dtype: float64"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tmp.ST.sort_values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "2367c11a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#machine learning model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "a252db0d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "240"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(df_tmp)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c6d7c113",
   "metadata": {},
   "source": [
    "# Modelling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "ebd4541a",
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "could not convert string to float: 'UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHENNAI - CEG CAMPUS,SARDAR PATEL ROAD, GUINDY,CHENNAI DIST, PIN - 600025.'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[1;32md:\\Github desktopunga\\TNEA_PREDICTOR_\\end-to-end-tnea-cutoff-prediction final .ipynb Cell 29\u001b[0m in \u001b[0;36m5\n\u001b[0;32m      <a href='vscode-notebook-cell:/d%3A/Github%20desktopunga/TNEA_PREDICTOR_/end-to-end-tnea-cutoff-prediction%20final%20.ipynb#X40sZmlsZQ%3D%3D?line=0'>1</a>\u001b[0m \u001b[39mfrom\u001b[39;00m \u001b[39msklearn\u001b[39;00m\u001b[39m.\u001b[39;00m\u001b[39mensemble\u001b[39;00m \u001b[39mimport\u001b[39;00m RandomForestRegressor\n\u001b[0;32m      <a href='vscode-notebook-cell:/d%3A/Github%20desktopunga/TNEA_PREDICTOR_/end-to-end-tnea-cutoff-prediction%20final%20.ipynb#X40sZmlsZQ%3D%3D?line=2'>3</a>\u001b[0m model \u001b[39m=\u001b[39m RandomForestRegressor(n_jobs\u001b[39m=\u001b[39m\u001b[39m-\u001b[39m\u001b[39m1\u001b[39m,random_state\u001b[39m=\u001b[39m\u001b[39m42\u001b[39m)\n\u001b[1;32m----> <a href='vscode-notebook-cell:/d%3A/Github%20desktopunga/TNEA_PREDICTOR_/end-to-end-tnea-cutoff-prediction%20final%20.ipynb#X40sZmlsZQ%3D%3D?line=4'>5</a>\u001b[0m model\u001b[39m.\u001b[39;49mfit(df_tmp\u001b[39m.\u001b[39;49mdrop(\u001b[39m\"\u001b[39;49m\u001b[39mOC\u001b[39;49m\u001b[39m\"\u001b[39;49m, axis\u001b[39m=\u001b[39;49m\u001b[39m1\u001b[39;49m), df_tmp[\u001b[39m\"\u001b[39;49m\u001b[39mOC\u001b[39;49m\u001b[39m\"\u001b[39;49m])\n",
      "File \u001b[1;32mc:\\Users\\indhu\\OneDrive\\Desktop\\tnea-proj\\env\\lib\\site-packages\\sklearn\\ensemble\\_forest.py:331\u001b[0m, in \u001b[0;36mBaseForest.fit\u001b[1;34m(self, X, y, sample_weight)\u001b[0m\n\u001b[0;32m    329\u001b[0m \u001b[39mif\u001b[39;00m issparse(y):\n\u001b[0;32m    330\u001b[0m     \u001b[39mraise\u001b[39;00m \u001b[39mValueError\u001b[39;00m(\u001b[39m\"\u001b[39m\u001b[39msparse multilabel-indicator for y is not supported.\u001b[39m\u001b[39m\"\u001b[39m)\n\u001b[1;32m--> 331\u001b[0m X, y \u001b[39m=\u001b[39m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_validate_data(\n\u001b[0;32m    332\u001b[0m     X, y, multi_output\u001b[39m=\u001b[39;49m\u001b[39mTrue\u001b[39;49;00m, accept_sparse\u001b[39m=\u001b[39;49m\u001b[39m\"\u001b[39;49m\u001b[39mcsc\u001b[39;49m\u001b[39m\"\u001b[39;49m, dtype\u001b[39m=\u001b[39;49mDTYPE\n\u001b[0;32m    333\u001b[0m )\n\u001b[0;32m    334\u001b[0m \u001b[39mif\u001b[39;00m sample_weight \u001b[39mis\u001b[39;00m \u001b[39mnot\u001b[39;00m \u001b[39mNone\u001b[39;00m:\n\u001b[0;32m    335\u001b[0m     sample_weight \u001b[39m=\u001b[39m _check_sample_weight(sample_weight, X)\n",
      "File \u001b[1;32mc:\\Users\\indhu\\OneDrive\\Desktop\\tnea-proj\\env\\lib\\site-packages\\sklearn\\base.py:596\u001b[0m, in \u001b[0;36mBaseEstimator._validate_data\u001b[1;34m(self, X, y, reset, validate_separately, **check_params)\u001b[0m\n\u001b[0;32m    594\u001b[0m         y \u001b[39m=\u001b[39m check_array(y, input_name\u001b[39m=\u001b[39m\u001b[39m\"\u001b[39m\u001b[39my\u001b[39m\u001b[39m\"\u001b[39m, \u001b[39m*\u001b[39m\u001b[39m*\u001b[39mcheck_y_params)\n\u001b[0;32m    595\u001b[0m     \u001b[39melse\u001b[39;00m:\n\u001b[1;32m--> 596\u001b[0m         X, y \u001b[39m=\u001b[39m check_X_y(X, y, \u001b[39m*\u001b[39m\u001b[39m*\u001b[39mcheck_params)\n\u001b[0;32m    597\u001b[0m     out \u001b[39m=\u001b[39m X, y\n\u001b[0;32m    599\u001b[0m \u001b[39mif\u001b[39;00m \u001b[39mnot\u001b[39;00m no_val_X \u001b[39mand\u001b[39;00m check_params\u001b[39m.\u001b[39mget(\u001b[39m\"\u001b[39m\u001b[39mensure_2d\u001b[39m\u001b[39m\"\u001b[39m, \u001b[39mTrue\u001b[39;00m):\n",
      "File \u001b[1;32mc:\\Users\\indhu\\OneDrive\\Desktop\\tnea-proj\\env\\lib\\site-packages\\sklearn\\utils\\validation.py:1074\u001b[0m, in \u001b[0;36mcheck_X_y\u001b[1;34m(X, y, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, multi_output, ensure_min_samples, ensure_min_features, y_numeric, estimator)\u001b[0m\n\u001b[0;32m   1069\u001b[0m         estimator_name \u001b[39m=\u001b[39m _check_estimator_name(estimator)\n\u001b[0;32m   1070\u001b[0m     \u001b[39mraise\u001b[39;00m \u001b[39mValueError\u001b[39;00m(\n\u001b[0;32m   1071\u001b[0m         \u001b[39mf\u001b[39m\u001b[39m\"\u001b[39m\u001b[39m{\u001b[39;00mestimator_name\u001b[39m}\u001b[39;00m\u001b[39m requires y to be passed, but the target y is None\u001b[39m\u001b[39m\"\u001b[39m\n\u001b[0;32m   1072\u001b[0m     )\n\u001b[1;32m-> 1074\u001b[0m X \u001b[39m=\u001b[39m check_array(\n\u001b[0;32m   1075\u001b[0m     X,\n\u001b[0;32m   1076\u001b[0m     accept_sparse\u001b[39m=\u001b[39;49maccept_sparse,\n\u001b[0;32m   1077\u001b[0m     accept_large_sparse\u001b[39m=\u001b[39;49maccept_large_sparse,\n\u001b[0;32m   1078\u001b[0m     dtype\u001b[39m=\u001b[39;49mdtype,\n\u001b[0;32m   1079\u001b[0m     order\u001b[39m=\u001b[39;49morder,\n\u001b[0;32m   1080\u001b[0m     copy\u001b[39m=\u001b[39;49mcopy,\n\u001b[0;32m   1081\u001b[0m     force_all_finite\u001b[39m=\u001b[39;49mforce_all_finite,\n\u001b[0;32m   1082\u001b[0m     ensure_2d\u001b[39m=\u001b[39;49mensure_2d,\n\u001b[0;32m   1083\u001b[0m     allow_nd\u001b[39m=\u001b[39;49mallow_nd,\n\u001b[0;32m   1084\u001b[0m     ensure_min_samples\u001b[39m=\u001b[39;49mensure_min_samples,\n\u001b[0;32m   1085\u001b[0m     ensure_min_features\u001b[39m=\u001b[39;49mensure_min_features,\n\u001b[0;32m   1086\u001b[0m     estimator\u001b[39m=\u001b[39;49mestimator,\n\u001b[0;32m   1087\u001b[0m     input_name\u001b[39m=\u001b[39;49m\u001b[39m\"\u001b[39;49m\u001b[39mX\u001b[39;49m\u001b[39m\"\u001b[39;49m,\n\u001b[0;32m   1088\u001b[0m )\n\u001b[0;32m   1090\u001b[0m y \u001b[39m=\u001b[39m _check_y(y, multi_output\u001b[39m=\u001b[39mmulti_output, y_numeric\u001b[39m=\u001b[39my_numeric, estimator\u001b[39m=\u001b[39mestimator)\n\u001b[0;32m   1092\u001b[0m check_consistent_length(X, y)\n",
      "File \u001b[1;32mc:\\Users\\indhu\\OneDrive\\Desktop\\tnea-proj\\env\\lib\\site-packages\\sklearn\\utils\\validation.py:856\u001b[0m, in \u001b[0;36mcheck_array\u001b[1;34m(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator, input_name)\u001b[0m\n\u001b[0;32m    854\u001b[0m         array \u001b[39m=\u001b[39m array\u001b[39m.\u001b[39mastype(dtype, casting\u001b[39m=\u001b[39m\u001b[39m\"\u001b[39m\u001b[39munsafe\u001b[39m\u001b[39m\"\u001b[39m, copy\u001b[39m=\u001b[39m\u001b[39mFalse\u001b[39;00m)\n\u001b[0;32m    855\u001b[0m     \u001b[39melse\u001b[39;00m:\n\u001b[1;32m--> 856\u001b[0m         array \u001b[39m=\u001b[39m np\u001b[39m.\u001b[39;49masarray(array, order\u001b[39m=\u001b[39;49morder, dtype\u001b[39m=\u001b[39;49mdtype)\n\u001b[0;32m    857\u001b[0m \u001b[39mexcept\u001b[39;00m ComplexWarning \u001b[39mas\u001b[39;00m complex_warning:\n\u001b[0;32m    858\u001b[0m     \u001b[39mraise\u001b[39;00m \u001b[39mValueError\u001b[39;00m(\n\u001b[0;32m    859\u001b[0m         \u001b[39m\"\u001b[39m\u001b[39mComplex data not supported\u001b[39m\u001b[39m\\n\u001b[39;00m\u001b[39m{}\u001b[39;00m\u001b[39m\\n\u001b[39;00m\u001b[39m\"\u001b[39m\u001b[39m.\u001b[39mformat(array)\n\u001b[0;32m    860\u001b[0m     ) \u001b[39mfrom\u001b[39;00m \u001b[39mcomplex_warning\u001b[39;00m\n",
      "File \u001b[1;32mc:\\Users\\indhu\\OneDrive\\Desktop\\tnea-proj\\env\\lib\\site-packages\\pandas\\core\\generic.py:2064\u001b[0m, in \u001b[0;36mNDFrame.__array__\u001b[1;34m(self, dtype)\u001b[0m\n\u001b[0;32m   2063\u001b[0m \u001b[39mdef\u001b[39;00m \u001b[39m__array__\u001b[39m(\u001b[39mself\u001b[39m, dtype: npt\u001b[39m.\u001b[39mDTypeLike \u001b[39m|\u001b[39m \u001b[39mNone\u001b[39;00m \u001b[39m=\u001b[39m \u001b[39mNone\u001b[39;00m) \u001b[39m-\u001b[39m\u001b[39m>\u001b[39m np\u001b[39m.\u001b[39mndarray:\n\u001b[1;32m-> 2064\u001b[0m     \u001b[39mreturn\u001b[39;00m np\u001b[39m.\u001b[39;49masarray(\u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_values, dtype\u001b[39m=\u001b[39;49mdtype)\n",
      "\u001b[1;31mValueError\u001b[0m: could not convert string to float: 'UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHENNAI - CEG CAMPUS,SARDAR PATEL ROAD, GUINDY,CHENNAI DIST, PIN - 600025.'"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestRegressor\n",
    "\n",
    "model = RandomForestRegressor(n_jobs=-1,random_state=42)\n",
    "\n",
    "model.fit(df_tmp.drop(\"OC\", axis=1), df_tmp[\"OC\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "230f46cb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 240 entries, 0 to 239\n",
      "Data columns (total 12 columns):\n",
      " #   Column        Non-Null Count  Dtype  \n",
      "---  ------        --------------  -----  \n",
      " 0   College Code  240 non-null    int64  \n",
      " 1   College_Name  240 non-null    object \n",
      " 2   Branch Code   240 non-null    object \n",
      " 3   Branch Name   240 non-null    object \n",
      " 4   OC            240 non-null    float64\n",
      " 5   BC            227 non-null    float64\n",
      " 6   BCM           218 non-null    float64\n",
      " 7   MBC           228 non-null    float64\n",
      " 8   SC            228 non-null    float64\n",
      " 9   SCA           203 non-null    float64\n",
      " 10  ST            118 non-null    float64\n",
      " 11  tYear         240 non-null    int64  \n",
      "dtypes: float64(7), int64(2), object(3)\n",
      "memory usage: 24.4+ KB\n"
     ]
    }
   ],
   "source": [
    "df_tmp.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "1877a2b2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('O')"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tmp[\"College_Name\"].dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "86b25056",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Year              0\n",
       "College Code      0\n",
       "College_Name      0\n",
       "Branch Code       0\n",
       "Branch Name       0\n",
       "OC                0\n",
       "BC               13\n",
       "BCM              22\n",
       "MBC              12\n",
       "SC               12\n",
       "SCA              37\n",
       "ST              122\n",
       "dtype: int64"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "1003d49f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#model driven EDA"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2cf9e10e",
   "metadata": {},
   "source": [
    "# Convert string to categories"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "86ec93a5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>32</th>\n",
       "      <th>33</th>\n",
       "      <th>34</th>\n",
       "      <th>35</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>College Code</th>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>College_Name</th>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Branch Code</th>\n",
       "      <td>AI</td>\n",
       "      <td>CM</td>\n",
       "      <td>CS</td>\n",
       "      <td>EC</td>\n",
       "      <td>EI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Branch Name</th>\n",
       "      <td>Agricultural and Irrigation Engg.(SS)</td>\n",
       "      <td>Computer Science and Engg.(SS)</td>\n",
       "      <td>Computer Science and Engg.</td>\n",
       "      <td>Electronics and Comm Engg.</td>\n",
       "      <td>Electronics and Instru Engg.</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OC</th>\n",
       "      <td>196.25</td>\n",
       "      <td>198.5</td>\n",
       "      <td>198.75</td>\n",
       "      <td>199.25</td>\n",
       "      <td>198.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BC</th>\n",
       "      <td>195.25</td>\n",
       "      <td>198.33</td>\n",
       "      <td>198.5</td>\n",
       "      <td>199.0</td>\n",
       "      <td>198.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BCM</th>\n",
       "      <td>193.25</td>\n",
       "      <td>197.5</td>\n",
       "      <td>198.0</td>\n",
       "      <td>198.0</td>\n",
       "      <td>197.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MBC</th>\n",
       "      <td>194.25</td>\n",
       "      <td>197.0</td>\n",
       "      <td>197.75</td>\n",
       "      <td>198.25</td>\n",
       "      <td>197.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SC</th>\n",
       "      <td>188.75</td>\n",
       "      <td>192.0</td>\n",
       "      <td>195.0</td>\n",
       "      <td>196.5</td>\n",
       "      <td>192.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SCA</th>\n",
       "      <td>185.75</td>\n",
       "      <td>186.0</td>\n",
       "      <td>197.5</td>\n",
       "      <td>196.25</td>\n",
       "      <td>190.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ST</th>\n",
       "      <td>175.25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>192.25</td>\n",
       "      <td>188.25</td>\n",
       "      <td>176.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tYear</th>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                             0   \\\n",
       "College Code                                                  1   \n",
       "College_Name  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "Branch Code                                                  AI   \n",
       "Branch Name               Agricultural and Irrigation Engg.(SS)   \n",
       "OC                                                       196.25   \n",
       "BC                                                       195.25   \n",
       "BCM                                                      193.25   \n",
       "MBC                                                      194.25   \n",
       "SC                                                       188.75   \n",
       "SCA                                                      185.75   \n",
       "ST                                                       175.25   \n",
       "tYear                                                      2017   \n",
       "\n",
       "                                                             32  \\\n",
       "College Code                                                  4   \n",
       "College_Name  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "Branch Code                                                  CM   \n",
       "Branch Name                      Computer Science and Engg.(SS)   \n",
       "OC                                                        198.5   \n",
       "BC                                                       198.33   \n",
       "BCM                                                       197.5   \n",
       "MBC                                                       197.0   \n",
       "SC                                                        192.0   \n",
       "SCA                                                       186.0   \n",
       "ST                                                          NaN   \n",
       "tYear                                                      2017   \n",
       "\n",
       "                                                             33  \\\n",
       "College Code                                                  4   \n",
       "College_Name  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "Branch Code                                                  CS   \n",
       "Branch Name                          Computer Science and Engg.   \n",
       "OC                                                       198.75   \n",
       "BC                                                        198.5   \n",
       "BCM                                                       198.0   \n",
       "MBC                                                      197.75   \n",
       "SC                                                        195.0   \n",
       "SCA                                                       197.5   \n",
       "ST                                                       192.25   \n",
       "tYear                                                      2017   \n",
       "\n",
       "                                                             34  \\\n",
       "College Code                                                  4   \n",
       "College_Name  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "Branch Code                                                  EC   \n",
       "Branch Name                          Electronics and Comm Engg.   \n",
       "OC                                                       199.25   \n",
       "BC                                                        199.0   \n",
       "BCM                                                       198.0   \n",
       "MBC                                                      198.25   \n",
       "SC                                                        196.5   \n",
       "SCA                                                      196.25   \n",
       "ST                                                       188.25   \n",
       "tYear                                                      2017   \n",
       "\n",
       "                                                             35  \n",
       "College Code                                                  4  \n",
       "College_Name  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...  \n",
       "Branch Code                                                  EI  \n",
       "Branch Name                        Electronics and Instru Engg.  \n",
       "OC                                                       198.25  \n",
       "BC                                                        198.0  \n",
       "BCM                                                      197.75  \n",
       "MBC                                                      197.25  \n",
       "SC                                                       192.75  \n",
       "SCA                                                      190.75  \n",
       "ST                                                        176.5  \n",
       "tYear                                                      2017  "
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tmp.head().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "28962860",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.api.types.is_string_dtype(df_tmp[\"College_Name\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "25cdd4bd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "College_Name\n",
      "Branch Code\n",
      "Branch Name\n"
     ]
    }
   ],
   "source": [
    "for label, content in df_tmp.items():\n",
    "    if pd.api.types.is_string_dtype(content):\n",
    "        print(label)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "f1a7042a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#category- Finite list of text values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "77db77b1",
   "metadata": {},
   "outputs": [],
   "source": [
    "for label, content in df_tmp.items():\n",
    "    if pd.api.types.is_string_dtype(content):\n",
    "        df_tmp[label] = content.astype(\"category\").cat.as_ordered()    #Set the Categorical to be ordered."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "4ded9e3a",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 240 entries, 0 to 239\n",
      "Data columns (total 12 columns):\n",
      " #   Column        Non-Null Count  Dtype   \n",
      "---  ------        --------------  -----   \n",
      " 0   College Code  240 non-null    int64   \n",
      " 1   College_Name  240 non-null    category\n",
      " 2   Branch Code   240 non-null    category\n",
      " 3   Branch Name   240 non-null    category\n",
      " 4   OC            240 non-null    float64 \n",
      " 5   BC            227 non-null    float64 \n",
      " 6   BCM           218 non-null    float64 \n",
      " 7   MBC           228 non-null    float64 \n",
      " 8   SC            228 non-null    float64 \n",
      " 9   SCA           203 non-null    float64 \n",
      " 10  ST            118 non-null    float64 \n",
      " 11  tYear         240 non-null    int64   \n",
      "dtypes: category(3), float64(7), int64(2)\n",
      "memory usage: 24.3 KB\n"
     ]
    }
   ],
   "source": [
    "df_tmp.info()  #changed from obj to category"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "483551a4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Annamalai University Faculty of Engineering and Technology,Annamalai nagar,Cuddalore',\n",
       "       'Annamalai University Faculty of Engineering and Technology,Annamalai nagar,Cuddalore 608002',\n",
       "       'UNIVERSITY COLLEGE OF ENGINEERING, ARNI,ARNI TO DEVIKAPURAM ROAD, THATCHUR, ARNI,THIRUVANNAMALAI DIST, PIN - 632326.',\n",
       "       'UNIVERSITY COLLEGE OF ENGINEERING, KANCHIPURAM,NH-4, CHENNAI BANGALORE HIGHWAY, PONNERIKKARAI,KANCHEEPURAM DIST, PIN - 631552.',\n",
       "       'UNIVERSITY COLLEGE OF ENGINEERING, TINDIVANAM,IYYANTHOPE (POST) , MELPAKKAM (VILLAGE),VILLUPURAM DIST, PIN - 604001.',\n",
       "       'UNIVERSITY COLLEGE OF ENGINEERING, VILLUPURAM,VILLUPURAM (POST) , KAKUPPAM (VILLAGE),VILLUPURAM DIST, PIN - 605103.',\n",
       "       'UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHENNAI - ACT CAMPUS,SARDAR PATEL ROAD, GUINDY,CHENNAI DIST, PIN - 600025.',\n",
       "       'UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHENNAI - CEG CAMPUS,SARDAR PATEL ROAD, GUINDY,CHENNAI DIST, PIN - 600025.',\n",
       "       'UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHENNAI - MIT CAMPUS,CHROMPET,,KANCHEEPURAM DIST, PIN - 600044.',\n",
       "       'University College of Engineering, Tindivanam, Melpakkam, Tindivanam, Villupuram District 604001',\n",
       "       'University College of Engineering, Villupuram, Kakuppam, Villupuram District 605103',\n",
       "       'University Departments of Anna University, Chennai - ACT Campus, Sardar Patel Road, Guindy, Chennai 600 025',\n",
       "       'University Departments of Anna University, Chennai - CEG Campus, Sardar Patel Road, Guindy, Chennai 600 025',\n",
       "       'University Departments of Anna University, Chennai - MIT Campus, Chrompet, Tambaram Taluk, Chengalpattu District 600 044',\n",
       "       'University Departments of Anna University, Chennai - MIT Campus, Chrompet, Tambaram Taluk, Kancheepuram District 600 044'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tmp.College_Name.cat.categories"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "a46ccedd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       7\n",
       "32      8\n",
       "33      8\n",
       "34      8\n",
       "35      8\n",
       "       ..\n",
       "204    11\n",
       "205    11\n",
       "206    11\n",
       "208    13\n",
       "239     9\n",
       "Length: 240, dtype: int8"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tmp.College_Name.cat.codes"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a5f85d5c",
   "metadata": {},
   "source": [
    "df_tmp.isnull().sum()/len(df_tmp)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f12a01eb",
   "metadata": {},
   "source": [
    "# Save preprocessed data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "4bc49d1b",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_tmp.to_csv(\"data/train_tmp.csv\",index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "faea6ef1",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>College Code</th>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>College_Name</th>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "      <td>UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Branch Code</th>\n",
       "      <td>AI</td>\n",
       "      <td>CM</td>\n",
       "      <td>CS</td>\n",
       "      <td>EC</td>\n",
       "      <td>EI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Branch Name</th>\n",
       "      <td>Agricultural and Irrigation Engg.(SS)</td>\n",
       "      <td>Computer Science and Engg.(SS)</td>\n",
       "      <td>Computer Science and Engg.</td>\n",
       "      <td>Electronics and Comm Engg.</td>\n",
       "      <td>Electronics and Instru Engg.</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OC</th>\n",
       "      <td>196.25</td>\n",
       "      <td>198.5</td>\n",
       "      <td>198.75</td>\n",
       "      <td>199.25</td>\n",
       "      <td>198.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BC</th>\n",
       "      <td>195.25</td>\n",
       "      <td>198.33</td>\n",
       "      <td>198.5</td>\n",
       "      <td>199.0</td>\n",
       "      <td>198.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BCM</th>\n",
       "      <td>193.25</td>\n",
       "      <td>197.5</td>\n",
       "      <td>198.0</td>\n",
       "      <td>198.0</td>\n",
       "      <td>197.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MBC</th>\n",
       "      <td>194.25</td>\n",
       "      <td>197.0</td>\n",
       "      <td>197.75</td>\n",
       "      <td>198.25</td>\n",
       "      <td>197.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SC</th>\n",
       "      <td>188.75</td>\n",
       "      <td>192.0</td>\n",
       "      <td>195.0</td>\n",
       "      <td>196.5</td>\n",
       "      <td>192.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SCA</th>\n",
       "      <td>185.75</td>\n",
       "      <td>186.0</td>\n",
       "      <td>197.5</td>\n",
       "      <td>196.25</td>\n",
       "      <td>190.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ST</th>\n",
       "      <td>175.25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>192.25</td>\n",
       "      <td>188.25</td>\n",
       "      <td>176.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tYear</th>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                              0  \\\n",
       "College Code                                                  1   \n",
       "College_Name  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "Branch Code                                                  AI   \n",
       "Branch Name               Agricultural and Irrigation Engg.(SS)   \n",
       "OC                                                       196.25   \n",
       "BC                                                       195.25   \n",
       "BCM                                                      193.25   \n",
       "MBC                                                      194.25   \n",
       "SC                                                       188.75   \n",
       "SCA                                                      185.75   \n",
       "ST                                                       175.25   \n",
       "tYear                                                      2017   \n",
       "\n",
       "                                                              1  \\\n",
       "College Code                                                  4   \n",
       "College_Name  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "Branch Code                                                  CM   \n",
       "Branch Name                      Computer Science and Engg.(SS)   \n",
       "OC                                                        198.5   \n",
       "BC                                                       198.33   \n",
       "BCM                                                       197.5   \n",
       "MBC                                                       197.0   \n",
       "SC                                                        192.0   \n",
       "SCA                                                       186.0   \n",
       "ST                                                          NaN   \n",
       "tYear                                                      2017   \n",
       "\n",
       "                                                              2  \\\n",
       "College Code                                                  4   \n",
       "College_Name  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "Branch Code                                                  CS   \n",
       "Branch Name                          Computer Science and Engg.   \n",
       "OC                                                       198.75   \n",
       "BC                                                        198.5   \n",
       "BCM                                                       198.0   \n",
       "MBC                                                      197.75   \n",
       "SC                                                        195.0   \n",
       "SCA                                                       197.5   \n",
       "ST                                                       192.25   \n",
       "tYear                                                      2017   \n",
       "\n",
       "                                                              3  \\\n",
       "College Code                                                  4   \n",
       "College_Name  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...   \n",
       "Branch Code                                                  EC   \n",
       "Branch Name                          Electronics and Comm Engg.   \n",
       "OC                                                       199.25   \n",
       "BC                                                        199.0   \n",
       "BCM                                                       198.0   \n",
       "MBC                                                      198.25   \n",
       "SC                                                        196.5   \n",
       "SCA                                                      196.25   \n",
       "ST                                                       188.25   \n",
       "tYear                                                      2017   \n",
       "\n",
       "                                                              4  \n",
       "College Code                                                  4  \n",
       "College_Name  UNIVERSITY DEPARTMENTS OF ANNA UNIVERSITY, CHE...  \n",
       "Branch Code                                                  EI  \n",
       "Branch Name                        Electronics and Instru Engg.  \n",
       "OC                                                       198.25  \n",
       "BC                                                        198.0  \n",
       "BCM                                                      197.75  \n",
       "MBC                                                      197.25  \n",
       "SC                                                       192.75  \n",
       "SCA                                                      190.75  \n",
       "ST                                                        176.5  \n",
       "tYear                                                      2017  "
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tmp = pd.read_csv(\"data/train_tmp.csv\",low_memory=False)\n",
    "df_tmp.head().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "6899a5c4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "College Code      0\n",
       "College_Name      0\n",
       "Branch Code       0\n",
       "Branch Name       0\n",
       "OC                0\n",
       "BC               13\n",
       "BCM              22\n",
       "MBC              12\n",
       "SC               12\n",
       "SCA              37\n",
       "ST              122\n",
       "tYear             0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tmp.isna().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "51a0996b",
   "metadata": {},
   "source": [
    "# Fill missing values\n",
    "Fill numerical missing values first"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "c3256d7c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "College Code\n",
      "OC\n",
      "BC\n",
      "BCM\n",
      "MBC\n",
      "SC\n",
      "SCA\n",
      "ST\n",
      "tYear\n"
     ]
    }
   ],
   "source": [
    "for label, content in df_tmp.items():\n",
    "    if pd.api.types.is_numeric_dtype(content):\n",
    "        print(label)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "6260ca6b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      193.25\n",
       "1      197.50\n",
       "2      198.00\n",
       "3      198.00\n",
       "4      197.75\n",
       "        ...  \n",
       "235    162.50\n",
       "236    174.50\n",
       "237    175.50\n",
       "238    189.50\n",
       "239     86.00\n",
       "Name: BCM, Length: 240, dtype: float64"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tmp.BCM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "a69980ce",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BC\n",
      "BCM\n",
      "MBC\n",
      "SC\n",
      "SCA\n",
      "ST\n"
     ]
    }
   ],
   "source": [
    "for label, content in df_tmp.items():\n",
    "    if pd.api.types.is_numeric_dtype(content):\n",
    "        if pd.isnull(content).sum():\n",
    "            print(label)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "fa82158a",
   "metadata": {},
   "outputs": [],
   "source": [
    "for label, content in df_tmp.items():\n",
    "    if pd.api.types.is_numeric_dtype(content):\n",
    "        if pd.isnull(content).sum():\n",
    "            df_tmp[label+\"_is_missing\"] = pd.isnull(content)\n",
    "            df_tmp[label] = content.fillna(content.median())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "bf7f70f9",
   "metadata": {},
   "outputs": [],
   "source": [
    "for label, content in df_tmp.items():\n",
    "    if pd.api.types.is_numeric_dtype(content):\n",
    "        if pd.isnull(content).sum():\n",
    "            print(label)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c314273d",
   "metadata": {},
   "source": [
    "df_tmp.MBCDNC_is_missing.value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "22868c9d",
   "metadata": {},
   "source": [
    "df_tmp.ST_is_missing.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "db6b6b1f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "College Code      0\n",
       "College_Name      0\n",
       "Branch Code       0\n",
       "Branch Name       0\n",
       "OC                0\n",
       "BC                0\n",
       "BCM               0\n",
       "MBC               0\n",
       "SC                0\n",
       "SCA               0\n",
       "ST                0\n",
       "tYear             0\n",
       "BC_is_missing     0\n",
       "BCM_is_missing    0\n",
       "MBC_is_missing    0\n",
       "SC_is_missing     0\n",
       "SCA_is_missing    0\n",
       "ST_is_missing     0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tmp.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "52a1bf18",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "College_Name\n",
      "Branch Code\n",
      "Branch Name\n"
     ]
    }
   ],
   "source": [
    "for label, content in df_tmp.items():\n",
    "    if not pd.api.types.is_numeric_dtype(content):\n",
    "        print(label)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "ab438914",
   "metadata": {},
   "outputs": [],
   "source": [
    "for label, content in df_tmp.items():\n",
    "    if not pd.api.types.is_numeric_dtype(content):\n",
    "        df_tmp[label+\"_is_missing\"] = pd.isnull(content)\n",
    "        df_tmp[label] = pd.Categorical(content).codes+1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "acf9122d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 8,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  6,  6,  6,  6,  5,  5,\n",
       "        5,  5,  5,  3,  3,  3,  3,  3,  4,  4,  4,  9,  9,  6,  7,  9,  8,\n",
       "        8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  7,  8,  8,  7,\n",
       "        7,  7,  7,  7,  7,  8,  7,  7,  7,  9,  9,  9,  6,  9,  9,  9,  9,\n",
       "        9,  9,  9,  6,  9,  6,  5,  6,  5,  5,  5,  5,  3,  3,  3,  3,  3,\n",
       "        4,  4,  6,  9,  4,  7,  8,  8,  8,  8,  8,  8,  8,  9,  8,  8,  8,\n",
       "        8,  8,  8,  8,  8,  8,  7,  7,  7,  7,  7,  7,  7,  7,  7,  8,  8,\n",
       "        7,  2,  2,  2,  2, 15, 15, 15, 15, 15, 15, 15, 15,  2, 10,  2,  2,\n",
       "        2,  2,  2, 11, 11, 11, 11, 11, 10, 10, 15,  2, 15,  2, 15, 13, 13,\n",
       "       13, 13, 13, 13, 13, 15, 13, 13, 13, 13, 13, 13, 13, 13, 13, 12, 12,\n",
       "       12, 12, 12, 12, 12, 12, 12, 12, 13, 12, 14,  1,  1,  1, 14, 14, 14,\n",
       "       14, 14, 14, 14, 14,  1, 10,  1,  1,  1,  1,  1,  1,  1, 11, 11, 11,\n",
       "       11, 11, 14,  1, 14, 13, 12, 10, 13, 13, 13, 13, 13, 13, 13, 13, 13,\n",
       "       13, 13, 13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,\n",
       "       14, 10], dtype=int8)"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.Categorical(df_tmp[\"College_Name\"]).codes+1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "1d67f132",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 240 entries, 0 to 239\n",
      "Data columns (total 21 columns):\n",
      " #   Column                   Non-Null Count  Dtype  \n",
      "---  ------                   --------------  -----  \n",
      " 0   College Code             240 non-null    int64  \n",
      " 1   College_Name             240 non-null    int8   \n",
      " 2   Branch Code              240 non-null    int8   \n",
      " 3   Branch Name              240 non-null    int8   \n",
      " 4   OC                       240 non-null    float64\n",
      " 5   BC                       240 non-null    float64\n",
      " 6   BCM                      240 non-null    float64\n",
      " 7   MBC                      240 non-null    float64\n",
      " 8   SC                       240 non-null    float64\n",
      " 9   SCA                      240 non-null    float64\n",
      " 10  ST                       240 non-null    float64\n",
      " 11  tYear                    240 non-null    int64  \n",
      " 12  BC_is_missing            240 non-null    bool   \n",
      " 13  BCM_is_missing           240 non-null    bool   \n",
      " 14  MBC_is_missing           240 non-null    bool   \n",
      " 15  SC_is_missing            240 non-null    bool   \n",
      " 16  SCA_is_missing           240 non-null    bool   \n",
      " 17  ST_is_missing            240 non-null    bool   \n",
      " 18  College_Name_is_missing  240 non-null    bool   \n",
      " 19  Branch Code_is_missing   240 non-null    bool   \n",
      " 20  Branch Name_is_missing   240 non-null    bool   \n",
      "dtypes: bool(9), float64(7), int64(2), int8(3)\n",
      "memory usage: 19.8 KB\n"
     ]
    }
   ],
   "source": [
    "df_tmp.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "85d0d6d9",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_tmp.to_csv(\"data/train_tmp.csv\",index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "3e626c80",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>College Code</th>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>College_Name</th>\n",
       "      <td>8</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Branch Code</th>\n",
       "      <td>2</td>\n",
       "      <td>12</td>\n",
       "      <td>14</td>\n",
       "      <td>16</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Branch Name</th>\n",
       "      <td>7</td>\n",
       "      <td>30</td>\n",
       "      <td>29</td>\n",
       "      <td>43</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OC</th>\n",
       "      <td>196.25</td>\n",
       "      <td>198.5</td>\n",
       "      <td>198.75</td>\n",
       "      <td>199.25</td>\n",
       "      <td>198.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BC</th>\n",
       "      <td>195.25</td>\n",
       "      <td>198.33</td>\n",
       "      <td>198.5</td>\n",
       "      <td>199.0</td>\n",
       "      <td>198.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BCM</th>\n",
       "      <td>193.25</td>\n",
       "      <td>197.5</td>\n",
       "      <td>198.0</td>\n",
       "      <td>198.0</td>\n",
       "      <td>197.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MBC</th>\n",
       "      <td>194.25</td>\n",
       "      <td>197.0</td>\n",
       "      <td>197.75</td>\n",
       "      <td>198.25</td>\n",
       "      <td>197.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SC</th>\n",
       "      <td>188.75</td>\n",
       "      <td>192.0</td>\n",
       "      <td>195.0</td>\n",
       "      <td>196.5</td>\n",
       "      <td>192.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SCA</th>\n",
       "      <td>185.75</td>\n",
       "      <td>186.0</td>\n",
       "      <td>197.5</td>\n",
       "      <td>196.25</td>\n",
       "      <td>190.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ST</th>\n",
       "      <td>175.25</td>\n",
       "      <td>167.0</td>\n",
       "      <td>192.25</td>\n",
       "      <td>188.25</td>\n",
       "      <td>176.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tYear</th>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BC_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BCM_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MBC_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SC_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SCA_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ST_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>College_Name_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Branch Code_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Branch Name_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              0       1       2       3       4\n",
       "College Code                  1       4       4       4       4\n",
       "College_Name                  8       9       9       9       9\n",
       "Branch Code                   2      12      14      16      18\n",
       "Branch Name                   7      30      29      43      47\n",
       "OC                       196.25   198.5  198.75  199.25  198.25\n",
       "BC                       195.25  198.33   198.5   199.0   198.0\n",
       "BCM                      193.25   197.5   198.0   198.0  197.75\n",
       "MBC                      194.25   197.0  197.75  198.25  197.25\n",
       "SC                       188.75   192.0   195.0   196.5  192.75\n",
       "SCA                      185.75   186.0   197.5  196.25  190.75\n",
       "ST                       175.25   167.0  192.25  188.25   176.5\n",
       "tYear                      2017    2017    2017    2017    2017\n",
       "BC_is_missing             False   False   False   False   False\n",
       "BCM_is_missing            False   False   False   False   False\n",
       "MBC_is_missing            False   False   False   False   False\n",
       "SC_is_missing             False   False   False   False   False\n",
       "SCA_is_missing            False   False   False   False   False\n",
       "ST_is_missing             False    True   False   False   False\n",
       "College_Name_is_missing   False   False   False   False   False\n",
       "Branch Code_is_missing    False   False   False   False   False\n",
       "Branch Name_is_missing    False   False   False   False   False"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tmp = pd.read_csv(\"data/train_tmp.csv\",low_memory=False)\n",
    "df_tmp.head().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "9dfa6fa8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>College Code</th>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>College_Name</th>\n",
       "      <td>8</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Branch Code</th>\n",
       "      <td>2</td>\n",
       "      <td>12</td>\n",
       "      <td>14</td>\n",
       "      <td>16</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Branch Name</th>\n",
       "      <td>7</td>\n",
       "      <td>30</td>\n",
       "      <td>29</td>\n",
       "      <td>43</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OC</th>\n",
       "      <td>196.25</td>\n",
       "      <td>198.5</td>\n",
       "      <td>198.75</td>\n",
       "      <td>199.25</td>\n",
       "      <td>198.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BC</th>\n",
       "      <td>195.25</td>\n",
       "      <td>198.33</td>\n",
       "      <td>198.5</td>\n",
       "      <td>199.0</td>\n",
       "      <td>198.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BCM</th>\n",
       "      <td>193.25</td>\n",
       "      <td>197.5</td>\n",
       "      <td>198.0</td>\n",
       "      <td>198.0</td>\n",
       "      <td>197.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MBC</th>\n",
       "      <td>194.25</td>\n",
       "      <td>197.0</td>\n",
       "      <td>197.75</td>\n",
       "      <td>198.25</td>\n",
       "      <td>197.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SC</th>\n",
       "      <td>188.75</td>\n",
       "      <td>192.0</td>\n",
       "      <td>195.0</td>\n",
       "      <td>196.5</td>\n",
       "      <td>192.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SCA</th>\n",
       "      <td>185.75</td>\n",
       "      <td>186.0</td>\n",
       "      <td>197.5</td>\n",
       "      <td>196.25</td>\n",
       "      <td>190.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ST</th>\n",
       "      <td>175.25</td>\n",
       "      <td>167.0</td>\n",
       "      <td>192.25</td>\n",
       "      <td>188.25</td>\n",
       "      <td>176.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tYear</th>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BC_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BCM_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MBC_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SC_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SCA_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ST_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>College_Name_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Branch Code_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Branch Name_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              0       1       2       3       4\n",
       "College Code                  1       4       4       4       4\n",
       "College_Name                  8       9       9       9       9\n",
       "Branch Code                   2      12      14      16      18\n",
       "Branch Name                   7      30      29      43      47\n",
       "OC                       196.25   198.5  198.75  199.25  198.25\n",
       "BC                       195.25  198.33   198.5   199.0   198.0\n",
       "BCM                      193.25   197.5   198.0   198.0  197.75\n",
       "MBC                      194.25   197.0  197.75  198.25  197.25\n",
       "SC                       188.75   192.0   195.0   196.5  192.75\n",
       "SCA                      185.75   186.0   197.5  196.25  190.75\n",
       "ST                       175.25   167.0  192.25  188.25   176.5\n",
       "tYear                      2017    2017    2017    2017    2017\n",
       "BC_is_missing             False   False   False   False   False\n",
       "BCM_is_missing            False   False   False   False   False\n",
       "MBC_is_missing            False   False   False   False   False\n",
       "SC_is_missing             False   False   False   False   False\n",
       "SCA_is_missing            False   False   False   False   False\n",
       "ST_is_missing             False    True   False   False   False\n",
       "College_Name_is_missing   False   False   False   False   False\n",
       "Branch Code_is_missing    False   False   False   False   False\n",
       "Branch Name_is_missing    False   False   False   False   False"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tmp.head().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "9b41d5f3",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_tmp.to_csv(\"data/train_tmp.csv\",index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "7f3acea9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>College Code</th>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>College_Name</th>\n",
       "      <td>8</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Branch Code</th>\n",
       "      <td>2</td>\n",
       "      <td>12</td>\n",
       "      <td>14</td>\n",
       "      <td>16</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Branch Name</th>\n",
       "      <td>7</td>\n",
       "      <td>30</td>\n",
       "      <td>29</td>\n",
       "      <td>43</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OC</th>\n",
       "      <td>196.25</td>\n",
       "      <td>198.5</td>\n",
       "      <td>198.75</td>\n",
       "      <td>199.25</td>\n",
       "      <td>198.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BC</th>\n",
       "      <td>195.25</td>\n",
       "      <td>198.33</td>\n",
       "      <td>198.5</td>\n",
       "      <td>199.0</td>\n",
       "      <td>198.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BCM</th>\n",
       "      <td>193.25</td>\n",
       "      <td>197.5</td>\n",
       "      <td>198.0</td>\n",
       "      <td>198.0</td>\n",
       "      <td>197.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MBC</th>\n",
       "      <td>194.25</td>\n",
       "      <td>197.0</td>\n",
       "      <td>197.75</td>\n",
       "      <td>198.25</td>\n",
       "      <td>197.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SC</th>\n",
       "      <td>188.75</td>\n",
       "      <td>192.0</td>\n",
       "      <td>195.0</td>\n",
       "      <td>196.5</td>\n",
       "      <td>192.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SCA</th>\n",
       "      <td>185.75</td>\n",
       "      <td>186.0</td>\n",
       "      <td>197.5</td>\n",
       "      <td>196.25</td>\n",
       "      <td>190.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ST</th>\n",
       "      <td>175.25</td>\n",
       "      <td>167.0</td>\n",
       "      <td>192.25</td>\n",
       "      <td>188.25</td>\n",
       "      <td>176.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tYear</th>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "      <td>2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BC_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BCM_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MBC_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SC_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SCA_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ST_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>College_Name_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Branch Code_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Branch Name_is_missing</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              0       1       2       3       4\n",
       "College Code                  1       4       4       4       4\n",
       "College_Name                  8       9       9       9       9\n",
       "Branch Code                   2      12      14      16      18\n",
       "Branch Name                   7      30      29      43      47\n",
       "OC                       196.25   198.5  198.75  199.25  198.25\n",
       "BC                       195.25  198.33   198.5   199.0   198.0\n",
       "BCM                      193.25   197.5   198.0   198.0  197.75\n",
       "MBC                      194.25   197.0  197.75  198.25  197.25\n",
       "SC                       188.75   192.0   195.0   196.5  192.75\n",
       "SCA                      185.75   186.0   197.5  196.25  190.75\n",
       "ST                       175.25   167.0  192.25  188.25   176.5\n",
       "tYear                      2017    2017    2017    2017    2017\n",
       "BC_is_missing             False   False   False   False   False\n",
       "BCM_is_missing            False   False   False   False   False\n",
       "MBC_is_missing            False   False   False   False   False\n",
       "SC_is_missing             False   False   False   False   False\n",
       "SCA_is_missing            False   False   False   False   False\n",
       "ST_is_missing             False    True   False   False   False\n",
       "College_Name_is_missing   False   False   False   False   False\n",
       "Branch Code_is_missing    False   False   False   False   False\n",
       "Branch Name_is_missing    False   False   False   False   False"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tmp = pd.read_csv(\"data/train_tmp.csv\",low_memory=False)\n",
    "df_tmp.head().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "be7de91a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "College Code               0\n",
       "College_Name               0\n",
       "Branch Code                0\n",
       "Branch Name                0\n",
       "OC                         0\n",
       "BC                         0\n",
       "BCM                        0\n",
       "MBC                        0\n",
       "SC                         0\n",
       "SCA                        0\n",
       "ST                         0\n",
       "tYear                      0\n",
       "BC_is_missing              0\n",
       "BCM_is_missing             0\n",
       "MBC_is_missing             0\n",
       "SC_is_missing              0\n",
       "SCA_is_missing             0\n",
       "ST_is_missing              0\n",
       "College_Name_is_missing    0\n",
       "Branch Code_is_missing     0\n",
       "Branch Name_is_missing     0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tmp.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "adeaa3a7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>College Code</th>\n",
       "      <th>College_Name</th>\n",
       "      <th>Branch Code</th>\n",
       "      <th>Branch Name</th>\n",
       "      <th>OC</th>\n",
       "      <th>BC</th>\n",
       "      <th>BCM</th>\n",
       "      <th>MBC</th>\n",
       "      <th>SC</th>\n",
       "      <th>SCA</th>\n",
       "      <th>...</th>\n",
       "      <th>tYear</th>\n",
       "      <th>BC_is_missing</th>\n",
       "      <th>BCM_is_missing</th>\n",
       "      <th>MBC_is_missing</th>\n",
       "      <th>SC_is_missing</th>\n",
       "      <th>SCA_is_missing</th>\n",
       "      <th>ST_is_missing</th>\n",
       "      <th>College_Name_is_missing</th>\n",
       "      <th>Branch Code_is_missing</th>\n",
       "      <th>Branch Name_is_missing</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>196.25</td>\n",
       "      <td>195.25</td>\n",
       "      <td>193.25</td>\n",
       "      <td>194.25</td>\n",
       "      <td>188.75</td>\n",
       "      <td>185.75</td>\n",
       "      <td>...</td>\n",
       "      <td>2017</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>12</td>\n",
       "      <td>30</td>\n",
       "      <td>198.50</td>\n",
       "      <td>198.33</td>\n",
       "      <td>197.50</td>\n",
       "      <td>197.00</td>\n",
       "      <td>192.00</td>\n",
       "      <td>186.00</td>\n",
       "      <td>...</td>\n",
       "      <td>2017</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>14</td>\n",
       "      <td>29</td>\n",
       "      <td>198.75</td>\n",
       "      <td>198.50</td>\n",
       "      <td>198.00</td>\n",
       "      <td>197.75</td>\n",
       "      <td>195.00</td>\n",
       "      <td>197.50</td>\n",
       "      <td>...</td>\n",
       "      <td>2017</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>16</td>\n",
       "      <td>43</td>\n",
       "      <td>199.25</td>\n",
       "      <td>199.00</td>\n",
       "      <td>198.00</td>\n",
       "      <td>198.25</td>\n",
       "      <td>196.50</td>\n",
       "      <td>196.25</td>\n",
       "      <td>...</td>\n",
       "      <td>2017</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>18</td>\n",
       "      <td>47</td>\n",
       "      <td>198.25</td>\n",
       "      <td>198.00</td>\n",
       "      <td>197.75</td>\n",
       "      <td>197.25</td>\n",
       "      <td>192.75</td>\n",
       "      <td>190.75</td>\n",
       "      <td>...</td>\n",
       "      <td>2017</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   College Code  College_Name  Branch Code  Branch Name      OC      BC  \\\n",
       "0             1             8            2            7  196.25  195.25   \n",
       "1             4             9           12           30  198.50  198.33   \n",
       "2             4             9           14           29  198.75  198.50   \n",
       "3             4             9           16           43  199.25  199.00   \n",
       "4             4             9           18           47  198.25  198.00   \n",
       "\n",
       "      BCM     MBC      SC     SCA  ...  tYear  BC_is_missing  BCM_is_missing  \\\n",
       "0  193.25  194.25  188.75  185.75  ...   2017          False           False   \n",
       "1  197.50  197.00  192.00  186.00  ...   2017          False           False   \n",
       "2  198.00  197.75  195.00  197.50  ...   2017          False           False   \n",
       "3  198.00  198.25  196.50  196.25  ...   2017          False           False   \n",
       "4  197.75  197.25  192.75  190.75  ...   2017          False           False   \n",
       "\n",
       "   MBC_is_missing  SC_is_missing  SCA_is_missing  ST_is_missing  \\\n",
       "0           False          False           False          False   \n",
       "1           False          False           False           True   \n",
       "2           False          False           False          False   \n",
       "3           False          False           False          False   \n",
       "4           False          False           False          False   \n",
       "\n",
       "   College_Name_is_missing  Branch Code_is_missing  Branch Name_is_missing  \n",
       "0                    False                   False                   False  \n",
       "1                    False                   False                   False  \n",
       "2                    False                   False                   False  \n",
       "3                    False                   False                   False  \n",
       "4                    False                   False                   False  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tmp.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "7d77720e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "240"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(df_tmp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "300bf2a5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: total: 250 ms\n",
      "Wall time: 239 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor(n_jobs=-1, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(n_jobs=-1, random_state=42)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestRegressor(n_jobs=-1, random_state=42)"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "# Instantiate model\n",
    "model = RandomForestRegressor(n_jobs=-1, random_state=42)\n",
    "\n",
    "# Fit the model\n",
    "model.fit(df_tmp.drop(\"OC\", axis=1), df_tmp[\"OC\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "58e42700",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9945104742162915"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Score the model\n",
    "model.score(df_tmp.drop(\"OC\", axis=1), df_tmp[\"OC\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e264e24",
   "metadata": {},
   "source": [
    "# Splitting data into train/validation sets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "b3109f45",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      2017\n",
       "1      2017\n",
       "2      2017\n",
       "3      2017\n",
       "4      2017\n",
       "       ... \n",
       "235    2020\n",
       "236    2020\n",
       "237    2020\n",
       "238    2020\n",
       "239    2020\n",
       "Name: tYear, Length: 240, dtype: int64"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tmp.tYear"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "2a3e11ec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2017    60\n",
       "2018    60\n",
       "2019    60\n",
       "2020    60\n",
       "Name: tYear, dtype: int64"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tmp.tYear.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "6036cb8b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(60, 180)"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_val = df_tmp[df_tmp.tYear == 2017]\n",
    "df_train = df_tmp[df_tmp.tYear != 2017]\n",
    "\n",
    "len(df_val), len(df_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "61d7cbb2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((180, 20), (180,), (60, 20), (60,))"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train, y_train = df_train.drop(\"OC\", axis=1), df_train.OC\n",
    "X_valid, y_valid = df_val.drop(\"OC\", axis=1), df_val.OC\n",
    "\n",
    "X_train.shape, y_train.shape, X_valid.shape, y_valid.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "c8cf00ce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "60     196.50\n",
       "61     193.50\n",
       "62     195.33\n",
       "63     175.00\n",
       "64     190.00\n",
       "        ...  \n",
       "235    167.50\n",
       "236    182.50\n",
       "237    177.50\n",
       "238    191.50\n",
       "239    118.00\n",
       "Name: OC, Length: 180, dtype: float64"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "70760a35",
   "metadata": {},
   "source": [
    "# Testing our model on a subset (to tune the hyperparameters)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "e820aa23",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: total: 344 ms\n",
      "Wall time: 269 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor(n_jobs=-1, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(n_jobs=-1, random_state=42)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestRegressor(n_jobs=-1, random_state=42)"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    " model = RandomForestRegressor(n_jobs=-1, \n",
    "                              random_state=42)\n",
    "\n",
    " model.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "f67f923d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "180"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(X_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "80703809",
   "metadata": {},
   "outputs": [],
   "source": [
    "model = RandomForestRegressor(n_jobs=-1,\n",
    "                              random_state=42,\n",
    "                              max_samples=100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "b2539d8f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: total: 312 ms\n",
      "Wall time: 327 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor(max_samples=100, n_jobs=-1, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(max_samples=100, n_jobs=-1, random_state=42)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestRegressor(max_samples=100, n_jobs=-1, random_state=42)"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "# Cutting down on the max number of samples each estimator can see improves training time\n",
    "model.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39898a82",
   "metadata": {},
   "source": [
    "(X_train.shape[0] * 100) / 1000000"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e6446d37",
   "metadata": {},
   "source": [
    "10000 * 100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "820bea7c",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'show_scores' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32md:\\Github desktopunga\\TNEA_PREDICTOR_\\end-to-end-tnea-cutoff-prediction final .ipynb Cell 84\u001b[0m in \u001b[0;36m1\n\u001b[1;32m----> <a href='vscode-notebook-cell:/d%3A/Github%20desktopunga/TNEA_PREDICTOR_/end-to-end-tnea-cutoff-prediction%20final%20.ipynb#Y146sZmlsZQ%3D%3D?line=0'>1</a>\u001b[0m show_scores(model)\n",
      "\u001b[1;31mNameError\u001b[0m: name 'show_scores' is not defined"
     ]
    }
   ],
   "source": [
    "show_scores(model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "583e698d",
   "metadata": {},
   "source": [
    "# Make predictions on test data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "b5be7038",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'data/2021 - Sheet1.csv'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "\u001b[1;32md:\\Github desktopunga\\TNEA_PREDICTOR_\\end-to-end-tnea-cutoff-prediction final .ipynb Cell 86\u001b[0m in \u001b[0;36m1\n\u001b[1;32m----> <a href='vscode-notebook-cell:/d%3A/Github%20desktopunga/TNEA_PREDICTOR_/end-to-end-tnea-cutoff-prediction%20final%20.ipynb#Y151sZmlsZQ%3D%3D?line=0'>1</a>\u001b[0m df_test \u001b[39m=\u001b[39m pd\u001b[39m.\u001b[39;49mread_csv(\u001b[39m\"\u001b[39;49m\u001b[39mdata/2021 - Sheet1.csv\u001b[39;49m\u001b[39m\"\u001b[39;49m,\n\u001b[0;32m      <a href='vscode-notebook-cell:/d%3A/Github%20desktopunga/TNEA_PREDICTOR_/end-to-end-tnea-cutoff-prediction%20final%20.ipynb#Y151sZmlsZQ%3D%3D?line=1'>2</a>\u001b[0m                       low_memory\u001b[39m=\u001b[39;49m\u001b[39mFalse\u001b[39;49;00m,\n\u001b[0;32m      <a href='vscode-notebook-cell:/d%3A/Github%20desktopunga/TNEA_PREDICTOR_/end-to-end-tnea-cutoff-prediction%20final%20.ipynb#Y151sZmlsZQ%3D%3D?line=2'>3</a>\u001b[0m                       parse_dates\u001b[39m=\u001b[39;49m[\u001b[39m\"\u001b[39;49m\u001b[39mYear\u001b[39;49m\u001b[39m\"\u001b[39;49m])\n\u001b[0;32m      <a href='vscode-notebook-cell:/d%3A/Github%20desktopunga/TNEA_PREDICTOR_/end-to-end-tnea-cutoff-prediction%20final%20.ipynb#Y151sZmlsZQ%3D%3D?line=4'>5</a>\u001b[0m df_test\u001b[39m.\u001b[39mhead()\n",
      "File \u001b[1;32mc:\\Users\\indhu\\OneDrive\\Desktop\\tnea-proj\\env\\lib\\site-packages\\pandas\\util\\_decorators.py:311\u001b[0m, in \u001b[0;36mdeprecate_nonkeyword_arguments.<locals>.decorate.<locals>.wrapper\u001b[1;34m(*args, **kwargs)\u001b[0m\n\u001b[0;32m    305\u001b[0m \u001b[39mif\u001b[39;00m \u001b[39mlen\u001b[39m(args) \u001b[39m>\u001b[39m num_allow_args:\n\u001b[0;32m    306\u001b[0m     warnings\u001b[39m.\u001b[39mwarn(\n\u001b[0;32m    307\u001b[0m         msg\u001b[39m.\u001b[39mformat(arguments\u001b[39m=\u001b[39marguments),\n\u001b[0;32m    308\u001b[0m         \u001b[39mFutureWarning\u001b[39;00m,\n\u001b[0;32m    309\u001b[0m         stacklevel\u001b[39m=\u001b[39mstacklevel,\n\u001b[0;32m    310\u001b[0m     )\n\u001b[1;32m--> 311\u001b[0m \u001b[39mreturn\u001b[39;00m func(\u001b[39m*\u001b[39margs, \u001b[39m*\u001b[39m\u001b[39m*\u001b[39mkwargs)\n",
      "File \u001b[1;32mc:\\Users\\indhu\\OneDrive\\Desktop\\tnea-proj\\env\\lib\\site-packages\\pandas\\io\\parsers\\readers.py:678\u001b[0m, in \u001b[0;36mread_csv\u001b[1;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, error_bad_lines, warn_bad_lines, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options)\u001b[0m\n\u001b[0;32m    663\u001b[0m kwds_defaults \u001b[39m=\u001b[39m _refine_defaults_read(\n\u001b[0;32m    664\u001b[0m     dialect,\n\u001b[0;32m    665\u001b[0m     delimiter,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    674\u001b[0m     defaults\u001b[39m=\u001b[39m{\u001b[39m\"\u001b[39m\u001b[39mdelimiter\u001b[39m\u001b[39m\"\u001b[39m: \u001b[39m\"\u001b[39m\u001b[39m,\u001b[39m\u001b[39m\"\u001b[39m},\n\u001b[0;32m    675\u001b[0m )\n\u001b[0;32m    676\u001b[0m kwds\u001b[39m.\u001b[39mupdate(kwds_defaults)\n\u001b[1;32m--> 678\u001b[0m \u001b[39mreturn\u001b[39;00m _read(filepath_or_buffer, kwds)\n",
      "File \u001b[1;32mc:\\Users\\indhu\\OneDrive\\Desktop\\tnea-proj\\env\\lib\\site-packages\\pandas\\io\\parsers\\readers.py:575\u001b[0m, in \u001b[0;36m_read\u001b[1;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[0;32m    572\u001b[0m _validate_names(kwds\u001b[39m.\u001b[39mget(\u001b[39m\"\u001b[39m\u001b[39mnames\u001b[39m\u001b[39m\"\u001b[39m, \u001b[39mNone\u001b[39;00m))\n\u001b[0;32m    574\u001b[0m \u001b[39m# Create the parser.\u001b[39;00m\n\u001b[1;32m--> 575\u001b[0m parser \u001b[39m=\u001b[39m TextFileReader(filepath_or_buffer, \u001b[39m*\u001b[39m\u001b[39m*\u001b[39mkwds)\n\u001b[0;32m    577\u001b[0m \u001b[39mif\u001b[39;00m chunksize \u001b[39mor\u001b[39;00m iterator:\n\u001b[0;32m    578\u001b[0m     \u001b[39mreturn\u001b[39;00m parser\n",
      "File \u001b[1;32mc:\\Users\\indhu\\OneDrive\\Desktop\\tnea-proj\\env\\lib\\site-packages\\pandas\\io\\parsers\\readers.py:932\u001b[0m, in \u001b[0;36mTextFileReader.__init__\u001b[1;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[0;32m    929\u001b[0m     \u001b[39mself\u001b[39m\u001b[39m.\u001b[39moptions[\u001b[39m\"\u001b[39m\u001b[39mhas_index_names\u001b[39m\u001b[39m\"\u001b[39m] \u001b[39m=\u001b[39m kwds[\u001b[39m\"\u001b[39m\u001b[39mhas_index_names\u001b[39m\u001b[39m\"\u001b[39m]\n\u001b[0;32m    931\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mhandles: IOHandles \u001b[39m|\u001b[39m \u001b[39mNone\u001b[39;00m \u001b[39m=\u001b[39m \u001b[39mNone\u001b[39;00m\n\u001b[1;32m--> 932\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_engine \u001b[39m=\u001b[39m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_make_engine(f, \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mengine)\n",
      "File \u001b[1;32mc:\\Users\\indhu\\OneDrive\\Desktop\\tnea-proj\\env\\lib\\site-packages\\pandas\\io\\parsers\\readers.py:1216\u001b[0m, in \u001b[0;36mTextFileReader._make_engine\u001b[1;34m(self, f, engine)\u001b[0m\n\u001b[0;32m   1212\u001b[0m     mode \u001b[39m=\u001b[39m \u001b[39m\"\u001b[39m\u001b[39mrb\u001b[39m\u001b[39m\"\u001b[39m\n\u001b[0;32m   1213\u001b[0m \u001b[39m# error: No overload variant of \"get_handle\" matches argument types\u001b[39;00m\n\u001b[0;32m   1214\u001b[0m \u001b[39m# \"Union[str, PathLike[str], ReadCsvBuffer[bytes], ReadCsvBuffer[str]]\"\u001b[39;00m\n\u001b[0;32m   1215\u001b[0m \u001b[39m# , \"str\", \"bool\", \"Any\", \"Any\", \"Any\", \"Any\", \"Any\"\u001b[39;00m\n\u001b[1;32m-> 1216\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mhandles \u001b[39m=\u001b[39m get_handle(  \u001b[39m# type: ignore[call-overload]\u001b[39;49;00m\n\u001b[0;32m   1217\u001b[0m     f,\n\u001b[0;32m   1218\u001b[0m     mode,\n\u001b[0;32m   1219\u001b[0m     encoding\u001b[39m=\u001b[39;49m\u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49moptions\u001b[39m.\u001b[39;49mget(\u001b[39m\"\u001b[39;49m\u001b[39mencoding\u001b[39;49m\u001b[39m\"\u001b[39;49m, \u001b[39mNone\u001b[39;49;00m),\n\u001b[0;32m   1220\u001b[0m     compression\u001b[39m=\u001b[39;49m\u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49moptions\u001b[39m.\u001b[39;49mget(\u001b[39m\"\u001b[39;49m\u001b[39mcompression\u001b[39;49m\u001b[39m\"\u001b[39;49m, \u001b[39mNone\u001b[39;49;00m),\n\u001b[0;32m   1221\u001b[0m     memory_map\u001b[39m=\u001b[39;49m\u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49moptions\u001b[39m.\u001b[39;49mget(\u001b[39m\"\u001b[39;49m\u001b[39mmemory_map\u001b[39;49m\u001b[39m\"\u001b[39;49m, \u001b[39mFalse\u001b[39;49;00m),\n\u001b[0;32m   1222\u001b[0m     is_text\u001b[39m=\u001b[39;49mis_text,\n\u001b[0;32m   1223\u001b[0m     errors\u001b[39m=\u001b[39;49m\u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49moptions\u001b[39m.\u001b[39;49mget(\u001b[39m\"\u001b[39;49m\u001b[39mencoding_errors\u001b[39;49m\u001b[39m\"\u001b[39;49m, \u001b[39m\"\u001b[39;49m\u001b[39mstrict\u001b[39;49m\u001b[39m\"\u001b[39;49m),\n\u001b[0;32m   1224\u001b[0m     storage_options\u001b[39m=\u001b[39;49m\u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49moptions\u001b[39m.\u001b[39;49mget(\u001b[39m\"\u001b[39;49m\u001b[39mstorage_options\u001b[39;49m\u001b[39m\"\u001b[39;49m, \u001b[39mNone\u001b[39;49;00m),\n\u001b[0;32m   1225\u001b[0m )\n\u001b[0;32m   1226\u001b[0m \u001b[39massert\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mhandles \u001b[39mis\u001b[39;00m \u001b[39mnot\u001b[39;00m \u001b[39mNone\u001b[39;00m\n\u001b[0;32m   1227\u001b[0m f \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mhandles\u001b[39m.\u001b[39mhandle\n",
      "File \u001b[1;32mc:\\Users\\indhu\\OneDrive\\Desktop\\tnea-proj\\env\\lib\\site-packages\\pandas\\io\\common.py:786\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    781\u001b[0m \u001b[39melif\u001b[39;00m \u001b[39misinstance\u001b[39m(handle, \u001b[39mstr\u001b[39m):\n\u001b[0;32m    782\u001b[0m     \u001b[39m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[0;32m    783\u001b[0m     \u001b[39m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[0;32m    784\u001b[0m     \u001b[39mif\u001b[39;00m ioargs\u001b[39m.\u001b[39mencoding \u001b[39mand\u001b[39;00m \u001b[39m\"\u001b[39m\u001b[39mb\u001b[39m\u001b[39m\"\u001b[39m \u001b[39mnot\u001b[39;00m \u001b[39min\u001b[39;00m ioargs\u001b[39m.\u001b[39mmode:\n\u001b[0;32m    785\u001b[0m         \u001b[39m# Encoding\u001b[39;00m\n\u001b[1;32m--> 786\u001b[0m         handle \u001b[39m=\u001b[39m \u001b[39mopen\u001b[39;49m(\n\u001b[0;32m    787\u001b[0m             handle,\n\u001b[0;32m    788\u001b[0m             ioargs\u001b[39m.\u001b[39;49mmode,\n\u001b[0;32m    789\u001b[0m             encoding\u001b[39m=\u001b[39;49mioargs\u001b[39m.\u001b[39;49mencoding,\n\u001b[0;32m    790\u001b[0m             errors\u001b[39m=\u001b[39;49merrors,\n\u001b[0;32m    791\u001b[0m             newline\u001b[39m=\u001b[39;49m\u001b[39m\"\u001b[39;49m\u001b[39m\"\u001b[39;49m,\n\u001b[0;32m    792\u001b[0m         )\n\u001b[0;32m    793\u001b[0m     \u001b[39melse\u001b[39;00m:\n\u001b[0;32m    794\u001b[0m         \u001b[39m# Binary mode\u001b[39;00m\n\u001b[0;32m    795\u001b[0m         handle \u001b[39m=\u001b[39m \u001b[39mopen\u001b[39m(handle, ioargs\u001b[39m.\u001b[39mmode)\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'data/2021 - Sheet1.csv'"
     ]
    }
   ],
   "source": [
    "df_test = pd.read_csv(\"data/2021 - Sheet1.csv\",\n",
    "                      low_memory=False,\n",
    "                      parse_dates=[\"Year\"])\n",
    "\n",
    "df_test.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 313,
   "id": "310346cc",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\indhu\\OneDrive\\Desktop\\tnea-proj\\env\\lib\\site-packages\\sklearn\\base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.\n",
      "Feature names unseen at fit time:\n",
      "- Year\n",
      "Feature names seen at fit time, yet now missing:\n",
      "- BCM_is_missing\n",
      "- BC_is_missing\n",
      "- Branch Code_is_missing\n",
      "- Branch Name_is_missing\n",
      "- College_Name_is_missing\n",
      "- ...\n",
      "\n",
      "  warnings.warn(message, FutureWarning)\n"
     ]
    },
    {
     "ename": "TypeError",
     "evalue": "float() argument must be a string or a real number, not 'Timestamp'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn [313], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m test_preds \u001b[38;5;241m=\u001b[39m \u001b[43mmodel\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mpredict\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdf_test\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32m~\\OneDrive\\Desktop\\tnea-proj\\env\\lib\\site-packages\\sklearn\\ensemble\\_forest.py:991\u001b[0m, in \u001b[0;36mForestRegressor.predict\u001b[1;34m(self, X)\u001b[0m\n\u001b[0;32m    989\u001b[0m check_is_fitted(\u001b[38;5;28mself\u001b[39m)\n\u001b[0;32m    990\u001b[0m \u001b[38;5;66;03m# Check data\u001b[39;00m\n\u001b[1;32m--> 991\u001b[0m X \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_validate_X_predict\u001b[49m\u001b[43m(\u001b[49m\u001b[43mX\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    993\u001b[0m \u001b[38;5;66;03m# Assign chunk of trees to jobs\u001b[39;00m\n\u001b[0;32m    994\u001b[0m n_jobs, _, _ \u001b[38;5;241m=\u001b[39m _partition_estimators(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mn_estimators, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mn_jobs)\n",
      "File \u001b[1;32m~\\OneDrive\\Desktop\\tnea-proj\\env\\lib\\site-packages\\sklearn\\ensemble\\_forest.py:605\u001b[0m, in \u001b[0;36mBaseForest._validate_X_predict\u001b[1;34m(self, X)\u001b[0m\n\u001b[0;32m    602\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[0;32m    603\u001b[0m \u001b[38;5;124;03mValidate X whenever one tries to predict, apply, predict_proba.\"\"\"\u001b[39;00m\n\u001b[0;32m    604\u001b[0m check_is_fitted(\u001b[38;5;28mself\u001b[39m)\n\u001b[1;32m--> 605\u001b[0m X \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_validate_data\u001b[49m\u001b[43m(\u001b[49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdtype\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mDTYPE\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43maccept_sparse\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mcsr\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mreset\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m)\u001b[49m\n\u001b[0;32m    606\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m issparse(X) \u001b[38;5;129;01mand\u001b[39;00m (X\u001b[38;5;241m.\u001b[39mindices\u001b[38;5;241m.\u001b[39mdtype \u001b[38;5;241m!=\u001b[39m np\u001b[38;5;241m.\u001b[39mintc \u001b[38;5;129;01mor\u001b[39;00m X\u001b[38;5;241m.\u001b[39mindptr\u001b[38;5;241m.\u001b[39mdtype \u001b[38;5;241m!=\u001b[39m np\u001b[38;5;241m.\u001b[39mintc):\n\u001b[0;32m    607\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mNo support for np.int64 index based sparse matrices\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
      "File \u001b[1;32m~\\OneDrive\\Desktop\\tnea-proj\\env\\lib\\site-packages\\sklearn\\base.py:577\u001b[0m, in \u001b[0;36mBaseEstimator._validate_data\u001b[1;34m(self, X, y, reset, validate_separately, **check_params)\u001b[0m\n\u001b[0;32m    575\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mValidation should be done on X, y or both.\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m    576\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m no_val_X \u001b[38;5;129;01mand\u001b[39;00m no_val_y:\n\u001b[1;32m--> 577\u001b[0m     X \u001b[38;5;241m=\u001b[39m check_array(X, input_name\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mX\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mcheck_params)\n\u001b[0;32m    578\u001b[0m     out \u001b[38;5;241m=\u001b[39m X\n\u001b[0;32m    579\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m no_val_X \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m no_val_y:\n",
      "File \u001b[1;32m~\\OneDrive\\Desktop\\tnea-proj\\env\\lib\\site-packages\\sklearn\\utils\\validation.py:856\u001b[0m, in \u001b[0;36mcheck_array\u001b[1;34m(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator, input_name)\u001b[0m\n\u001b[0;32m    854\u001b[0m         array \u001b[38;5;241m=\u001b[39m array\u001b[38;5;241m.\u001b[39mastype(dtype, casting\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124munsafe\u001b[39m\u001b[38;5;124m\"\u001b[39m, copy\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m)\n\u001b[0;32m    855\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m--> 856\u001b[0m         array \u001b[38;5;241m=\u001b[39m \u001b[43mnp\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43masarray\u001b[49m\u001b[43m(\u001b[49m\u001b[43marray\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43morder\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43morder\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdtype\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdtype\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    857\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m ComplexWarning \u001b[38;5;28;01mas\u001b[39;00m complex_warning:\n\u001b[0;32m    858\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m    859\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mComplex data not supported\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;132;01m{}\u001b[39;00m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;241m.\u001b[39mformat(array)\n\u001b[0;32m    860\u001b[0m     ) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mcomplex_warning\u001b[39;00m\n",
      "File \u001b[1;32m~\\OneDrive\\Desktop\\tnea-proj\\env\\lib\\site-packages\\pandas\\core\\generic.py:2064\u001b[0m, in \u001b[0;36mNDFrame.__array__\u001b[1;34m(self, dtype)\u001b[0m\n\u001b[0;32m   2063\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m__array__\u001b[39m(\u001b[38;5;28mself\u001b[39m, dtype: npt\u001b[38;5;241m.\u001b[39mDTypeLike \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m np\u001b[38;5;241m.\u001b[39mndarray:\n\u001b[1;32m-> 2064\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mnp\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43masarray\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_values\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdtype\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdtype\u001b[49m\u001b[43m)\u001b[49m\n",
      "\u001b[1;31mTypeError\u001b[0m: float() argument must be a string or a real number, not 'Timestamp'"
     ]
    }
   ],
   "source": [
    "test_preds = model.predict(df_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "570d1f05",
   "metadata": {},
   "source": [
    "# Preprocessing the data (getting the test dataset in the same format as our training dataset)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 315,
   "id": "79904e3f",
   "metadata": {},
   "outputs": [],
   "source": [
    "def preprocess_data(df):\n",
    "    \"\"\"\n",
    "    Performs transformations on df and returns transformed df.\n",
    "    \"\"\"\n",
    "    df[\"tYear\"] = df.Year.dt.year\n",
    "    #df_tmp[\"Year\"] = df_tmp.Year.dt.year\n",
    "    \n",
    "    df.drop(\"Year\", axis=1, inplace=True)\n",
    "    \n",
    "    \n",
    "    for label, content in df.items():\n",
    "        if pd.api.types.is_numeric_dtype(content):\n",
    "            if pd.isnull(content).sum():\n",
    "                \n",
    "                df[label+\"_is_missing\"] = pd.isnull(content)\n",
    "                \n",
    "                df[label] = content.fillna(content.median())\n",
    "    \n",
    "        \n",
    "        if not pd.api.types.is_numeric_dtype(content):\n",
    "            df[label+\"_is_missing\"] = pd.isnull(content)\n",
    "           \n",
    "            df[label] = pd.Categorical(content).codes+1\n",
    "    \n",
    "    return df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 316,
   "id": "fc439cdc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>College Code</th>\n",
       "      <th>College_Name</th>\n",
       "      <th>Branch Code</th>\n",
       "      <th>Branch Name</th>\n",
       "      <th>BC</th>\n",
       "      <th>BCM</th>\n",
       "      <th>MBC</th>\n",
       "      <th>SC</th>\n",
       "      <th>SCA</th>\n",
       "      <th>ST</th>\n",
       "      <th>tYear</th>\n",
       "      <th>College_Name_is_missing</th>\n",
       "      <th>Branch Code_is_missing</th>\n",
       "      <th>Branch Name_is_missing</th>\n",
       "      <th>BC_is_missing</th>\n",
       "      <th>BCM_is_missing</th>\n",
       "      <th>MBC_is_missing</th>\n",
       "      <th>SC_is_missing</th>\n",
       "      <th>SCA_is_missing</th>\n",
       "      <th>ST_is_missing</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>194.000000</td>\n",
       "      <td>193.500</td>\n",
       "      <td>194.775</td>\n",
       "      <td>189.00</td>\n",
       "      <td>182.500</td>\n",
       "      <td>181.000</td>\n",
       "      <td>2021</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>192.685000</td>\n",
       "      <td>190.500</td>\n",
       "      <td>193.330</td>\n",
       "      <td>190.00</td>\n",
       "      <td>182.000</td>\n",
       "      <td>174.635</td>\n",
       "      <td>2021</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>10</td>\n",
       "      <td>14</td>\n",
       "      <td>197.666667</td>\n",
       "      <td>196.375</td>\n",
       "      <td>197.500</td>\n",
       "      <td>193.00</td>\n",
       "      <td>192.060</td>\n",
       "      <td>190.815</td>\n",
       "      <td>2021</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>12</td>\n",
       "      <td>11</td>\n",
       "      <td>198.120000</td>\n",
       "      <td>197.020</td>\n",
       "      <td>198.625</td>\n",
       "      <td>196.50</td>\n",
       "      <td>193.935</td>\n",
       "      <td>192.165</td>\n",
       "      <td>2021</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>14</td>\n",
       "      <td>16</td>\n",
       "      <td>197.333333</td>\n",
       "      <td>196.000</td>\n",
       "      <td>197.130</td>\n",
       "      <td>194.35</td>\n",
       "      <td>192.000</td>\n",
       "      <td>192.500</td>\n",
       "      <td>2021</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   College Code  College_Name  Branch Code  Branch Name          BC      BCM  \\\n",
       "0             1             5            5            4  194.000000  193.500   \n",
       "1             1             5            6            9  192.685000  190.500   \n",
       "2             1             5           10           14  197.666667  196.375   \n",
       "3             1             5           12           11  198.120000  197.020   \n",
       "4             1             5           14           16  197.333333  196.000   \n",
       "\n",
       "       MBC      SC      SCA       ST  tYear  College_Name_is_missing  \\\n",
       "0  194.775  189.00  182.500  181.000   2021                    False   \n",
       "1  193.330  190.00  182.000  174.635   2021                    False   \n",
       "2  197.500  193.00  192.060  190.815   2021                    False   \n",
       "3  198.625  196.50  193.935  192.165   2021                    False   \n",
       "4  197.130  194.35  192.000  192.500   2021                    False   \n",
       "\n",
       "   Branch Code_is_missing  Branch Name_is_missing  BC_is_missing  \\\n",
       "0                   False                   False          False   \n",
       "1                   False                   False          False   \n",
       "2                   False                   False          False   \n",
       "3                   False                   False          False   \n",
       "4                   False                   False          False   \n",
       "\n",
       "   BCM_is_missing  MBC_is_missing  SC_is_missing  SCA_is_missing  \\\n",
       "0           False           False          False           False   \n",
       "1           False           False          False           False   \n",
       "2           False           False          False           False   \n",
       "3           False           False          False           False   \n",
       "4           False           False          False           False   \n",
       "\n",
       "   ST_is_missing  \n",
       "0          False  \n",
       "1          False  \n",
       "2          False  \n",
       "3          False  \n",
       "4          False  "
      ]
     },
     "execution_count": 316,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_test = preprocess_data(df_test)\n",
    "df_test.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 317,
   "id": "2306e132",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\indhu\\OneDrive\\Desktop\\tnea-proj\\env\\lib\\site-packages\\sklearn\\base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.\n",
      "Feature names must be in the same order as they were in fit.\n",
      "\n",
      "  warnings.warn(message, FutureWarning)\n"
     ]
    }
   ],
   "source": [
    "test_preds =model.predict(df_test)  #Python predict() function enables us to predict the labels of the data values on the basis of the trained model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 318,
   "id": "1ee2c673",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>College Code</th>\n",
       "      <th>College_Name</th>\n",
       "      <th>Branch Code</th>\n",
       "      <th>Branch Name</th>\n",
       "      <th>BC</th>\n",
       "      <th>BCM</th>\n",
       "      <th>MBC</th>\n",
       "      <th>SC</th>\n",
       "      <th>SCA</th>\n",
       "      <th>ST</th>\n",
       "      <th>tYear</th>\n",
       "      <th>BC_is_missing</th>\n",
       "      <th>BCM_is_missing</th>\n",
       "      <th>MBC_is_missing</th>\n",
       "      <th>SC_is_missing</th>\n",
       "      <th>SCA_is_missing</th>\n",
       "      <th>ST_is_missing</th>\n",
       "      <th>College_Name_is_missing</th>\n",
       "      <th>Branch Code_is_missing</th>\n",
       "      <th>Branch Name_is_missing</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>22</td>\n",
       "      <td>52</td>\n",
       "      <td>192.75</td>\n",
       "      <td>191.75</td>\n",
       "      <td>190.25</td>\n",
       "      <td>180.00</td>\n",
       "      <td>141.00</td>\n",
       "      <td>167.00</td>\n",
       "      <td>2018</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>24</td>\n",
       "      <td>56</td>\n",
       "      <td>192.50</td>\n",
       "      <td>188.75</td>\n",
       "      <td>190.00</td>\n",
       "      <td>179.50</td>\n",
       "      <td>153.25</td>\n",
       "      <td>167.00</td>\n",
       "      <td>2018</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>192.25</td>\n",
       "      <td>191.00</td>\n",
       "      <td>189.50</td>\n",
       "      <td>184.50</td>\n",
       "      <td>164.50</td>\n",
       "      <td>168.75</td>\n",
       "      <td>2018</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>29</td>\n",
       "      <td>69</td>\n",
       "      <td>190.25</td>\n",
       "      <td>187.75</td>\n",
       "      <td>188.00</td>\n",
       "      <td>174.25</td>\n",
       "      <td>164.75</td>\n",
       "      <td>167.00</td>\n",
       "      <td>2018</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>25</td>\n",
       "      <td>58</td>\n",
       "      <td>197.00</td>\n",
       "      <td>195.00</td>\n",
       "      <td>195.00</td>\n",
       "      <td>185.50</td>\n",
       "      <td>178.50</td>\n",
       "      <td>187.75</td>\n",
       "      <td>2018</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    College Code  College_Name  Branch Code  Branch Name      BC     BCM  \\\n",
       "60             1             8           22           52  192.75  191.75   \n",
       "61             1             8           24           56  192.50  188.75   \n",
       "62             1             8            2            2  192.25  191.00   \n",
       "63             1             8           29           69  190.25  187.75   \n",
       "64             1             8           25           58  197.00  195.00   \n",
       "\n",
       "       MBC      SC     SCA      ST  tYear  BC_is_missing  BCM_is_missing  \\\n",
       "60  190.25  180.00  141.00  167.00   2018          False           False   \n",
       "61  190.00  179.50  153.25  167.00   2018          False           False   \n",
       "62  189.50  184.50  164.50  168.75   2018          False           False   \n",
       "63  188.00  174.25  164.75  167.00   2018          False           False   \n",
       "64  195.00  185.50  178.50  187.75   2018          False           False   \n",
       "\n",
       "    MBC_is_missing  SC_is_missing  SCA_is_missing  ST_is_missing  \\\n",
       "60           False          False           False           True   \n",
       "61           False          False           False           True   \n",
       "62           False          False           False          False   \n",
       "63           False          False           False           True   \n",
       "64           False          False           False          False   \n",
       "\n",
       "    College_Name_is_missing  Branch Code_is_missing  Branch Name_is_missing  \n",
       "60                    False                   False                   False  \n",
       "61                    False                   False                   False  \n",
       "62                    False                   False                   False  \n",
       "63                    False                   False                   False  \n",
       "64                    False                   False                   False  "
      ]
     },
     "execution_count": 318,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 319,
   "id": "375731ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "set()"
      ]
     },
     "execution_count": 319,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "set(X_train.columns) - set(df_test.columns)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "21d403a1",
   "metadata": {},
   "source": [
    "df_test[\"set()\"] = False\n",
    "df_test.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 320,
   "id": "731eda32",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\indhu\\OneDrive\\Desktop\\tnea-proj\\env\\lib\\site-packages\\sklearn\\base.py:493: FutureWarning: The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.\n",
      "Feature names must be in the same order as they were in fit.\n",
      "\n",
      "  warnings.warn(message, FutureWarning)\n"
     ]
    }
   ],
   "source": [
    "test_preds = model.predict(df_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "62bb7adf",
   "metadata": {},
   "source": [
    "test_preds = ideal_model.predict(df_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3052c3ab",
   "metadata": {},
   "source": [
    "df_test[\"set()\"] = False\n",
    "df_test[\"Branch Code_is_missing\"] = False\n",
    "df_test[\"Branch Name_is_missing\"] = False\n",
    "df_test[\"College_Name_is_missing\"] = False\n",
    "df_test.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 321,
   "id": "d09cb99b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([195.7322, 195.3772, 198.164 , 198.6843, 198.0707, 196.7141,\n",
       "       197.2875, 194.9289, 194.3583, 196.9225, 192.92  , 195.5039,\n",
       "       191.43  , 192.3675, 191.4275, 187.0825, 187.6425, 187.355 ,\n",
       "       194.8815, 192.8941, 187.365 , 192.1583, 194.4981, 194.8081,\n",
       "       186.97  , 191.4275, 189.07  , 187.6   , 195.6288, 191.7275,\n",
       "       196.885 , 197.5424, 195.535 , 195.6721, 196.5682, 196.6008,\n",
       "       195.3396, 191.75  , 188.4625, 160.2375, 161.0525, 160.59  ,\n",
       "       160.6825, 155.51  , 156.385 , 160.26  , 158.9175, 162.6975,\n",
       "       158.435 , 156.47  , 149.2625, 155.2775, 161.905 , 158.65  ,\n",
       "       157.195 , 131.5725, 157.745 , 159.7025, 161.3875, 158.82  ])"
      ]
     },
     "execution_count": 321,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_preds"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 308,
   "id": "9341dc0e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>College_Name</th>\n",
       "      <th>OC</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5</td>\n",
       "      <td>180.303136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5</td>\n",
       "      <td>180.303136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>183.121199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5</td>\n",
       "      <td>183.121199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>183.121199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>182.761601</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>5</td>\n",
       "      <td>183.121199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>5</td>\n",
       "      <td>182.761601</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>5</td>\n",
       "      <td>182.556752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>5</td>\n",
       "      <td>182.916350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>5</td>\n",
       "      <td>182.556752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>5</td>\n",
       "      <td>182.556752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>5</td>\n",
       "      <td>182.558691</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>5</td>\n",
       "      <td>182.556752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>5</td>\n",
       "      <td>182.558691</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>5</td>\n",
       "      <td>181.444103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>5</td>\n",
       "      <td>181.318275</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>4</td>\n",
       "      <td>178.997280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>4</td>\n",
       "      <td>170.476236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>4</td>\n",
       "      <td>180.303136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>4</td>\n",
       "      <td>180.782565</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>4</td>\n",
       "      <td>181.492553</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>4</td>\n",
       "      <td>181.492553</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>4</td>\n",
       "      <td>182.761601</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>4</td>\n",
       "      <td>180.550409</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>4</td>\n",
       "      <td>182.558691</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>4</td>\n",
       "      <td>181.766490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>4</td>\n",
       "      <td>181.077646</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>6</td>\n",
       "      <td>177.204498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>6</td>\n",
       "      <td>175.935450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>6</td>\n",
       "      <td>180.022561</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>6</td>\n",
       "      <td>180.022561</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>6</td>\n",
       "      <td>178.393915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>6</td>\n",
       "      <td>179.662963</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>6</td>\n",
       "      <td>179.662963</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>6</td>\n",
       "      <td>179.458113</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>6</td>\n",
       "      <td>179.985350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>6</td>\n",
       "      <td>179.460052</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>6</td>\n",
       "      <td>179.460052</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>1</td>\n",
       "      <td>166.246990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>1</td>\n",
       "      <td>160.860531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>1</td>\n",
       "      <td>157.885212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>1</td>\n",
       "      <td>164.292431</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>1</td>\n",
       "      <td>168.976265</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>1</td>\n",
       "      <td>158.208061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>1</td>\n",
       "      <td>156.911777</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>1</td>\n",
       "      <td>159.965134</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>1</td>\n",
       "      <td>168.215432</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>1</td>\n",
       "      <td>162.432048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>1</td>\n",
       "      <td>158.720611</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>1</td>\n",
       "      <td>160.436983</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>3</td>\n",
       "      <td>165.544365</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>3</td>\n",
       "      <td>162.645816</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>3</td>\n",
       "      <td>164.529337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>3</td>\n",
       "      <td>151.040685</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>3</td>\n",
       "      <td>156.572907</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>2</td>\n",
       "      <td>159.103458</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>2</td>\n",
       "      <td>164.600374</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>2</td>\n",
       "      <td>163.318995</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>2</td>\n",
       "      <td>166.018321</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    College_Name          OC\n",
       "0              5  180.303136\n",
       "1              5  180.303136\n",
       "2              5  183.121199\n",
       "3              5  183.121199\n",
       "4              5  183.121199\n",
       "5              5  182.761601\n",
       "6              5  183.121199\n",
       "7              5  182.761601\n",
       "8              5  182.556752\n",
       "9              5  182.916350\n",
       "10             5  182.556752\n",
       "11             5  182.556752\n",
       "12             5  182.558691\n",
       "13             5  182.556752\n",
       "14             5  182.558691\n",
       "15             5  181.444103\n",
       "16             5  181.318275\n",
       "17             4  178.997280\n",
       "18             4  170.476236\n",
       "19             4  180.303136\n",
       "20             4  180.782565\n",
       "21             4  181.492553\n",
       "22             4  181.492553\n",
       "23             4  182.761601\n",
       "24             4  180.550409\n",
       "25             4  182.558691\n",
       "26             4  181.766490\n",
       "27             4  181.077646\n",
       "28             6  177.204498\n",
       "29             6  175.935450\n",
       "30             6  180.022561\n",
       "31             6  180.022561\n",
       "32             6  178.393915\n",
       "33             6  179.662963\n",
       "34             6  179.662963\n",
       "35             6  179.458113\n",
       "36             6  179.985350\n",
       "37             6  179.460052\n",
       "38             6  179.460052\n",
       "39             1  166.246990\n",
       "40             1  160.860531\n",
       "41             1  157.885212\n",
       "42             1  164.292431\n",
       "43             1  168.976265\n",
       "44             1  158.208061\n",
       "45             1  156.911777\n",
       "46             1  159.965134\n",
       "47             1  168.215432\n",
       "48             1  162.432048\n",
       "49             1  158.720611\n",
       "50             1  160.436983\n",
       "51             3  165.544365\n",
       "52             3  162.645816\n",
       "53             3  164.529337\n",
       "54             3  151.040685\n",
       "55             3  156.572907\n",
       "56             2  159.103458\n",
       "57             2  164.600374\n",
       "58             2  163.318995\n",
       "59             2  166.018321"
      ]
     },
     "execution_count": 308,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_preds = pd.DataFrame()\n",
    "df_preds[\"College_Name\"] = df_test[\"College_Name\"]\n",
    "df_preds[\"OC\"] = test_preds\n",
    "df_preds"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 322,
   "id": "e93e0d43",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_preds.to_csv(\"data/predictions.csv\", index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 323,
   "id": "5610ad22",
   "metadata": {},
   "outputs": [],
   "source": [
    "dff = pd.read_csv(\"data/predictions.csv\",low_memory=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 325,
   "id": "38016b11",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Predicted Cutoff Marks of OC category 2021')"
      ]
     },
     "execution_count": 325,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "ax.scatter(dff[\"College_Name\"][:1000], dff[\"OC\"][:1000])\n",
    "plt.xlabel(\"College_Name\")\n",
    "plt.ylabel(\"Cutoff mark\")\n",
    "plt.title(\"Predicted Cutoff Marks of OC category 2021\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "23b66945",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9e65e9e3",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "799f4223",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
